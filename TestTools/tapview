#!/usr/bin/env python3

# Copyright (c) 2021 Elliot Nunn
# Licensed under the MIT license

import re
import sys


sys.stdin.reconfigure(encoding="latin-1")
sys.stdout.reconfigure(encoding="latin-1")

testcount = 0
failcount = 0
skipcount = 0
todocount = 0
test_before_plan = False
test_after_plan = False
expect = None
lastnum = 0
xstatus = 0
report = ""


def ship_char(c):
    print(c, end="", flush=True)


def print_report():
    print("\n" + report.rstrip("\n"))


def ship_line(l):
    global report
    report += l + "\n"


for line in sys.stdin:
    line = line.rstrip("\n")

    if line == "Bail out!":
        ship_line(line)
        xstatus = 2
        break

    if re.match(r"1\.\.\d+", line):
        if expect is not None:
            if testcount > 0:
                print()
            ship_line("Cannot have more than one plan line.")
            print_report()
            sys.exit(1)

        if re.match(r".* *skip", line, re.IGNORECASE):
            ship_line(line)
            print_report()
            sys.exit(1)

        expect = int(re.match(r"\d+", line[3:]).group(0))

        continue

    m = re.match(r"(?:not )?ok (\d+)", line)
    if m:
        testcount += 1
        if expect is None:
            test_before_plan = True
        else:
            test_after_plan = True

        n = int(m.group(1))
        if n != lastnum + 1:
            ship_line(line)
            ship_line("Misnumbered test")
            print_report()
            sys.exit(1)
        lastnum = n

        bad = line.startswith("not")
        skip = bool(re.search(r"# +skip", line, re.IGNORECASE))
        todo = bool(re.search(r"# +todo", line, re.IGNORECASE))

        if bad:
            failcount += 1
            xstatus = 1

        if todo:
            todocount += 1

        if skip:
            skipcount += 1

        if not bad:
            if todo:
                ship_char("u")
                ship_line(line)
            elif skip:
                ship_char("s")
                ship_line(line)
            else:
                ship_char(".")
        else:
            if skip:
                ship_char("s")
            elif todo:
                ship_char("x")
            else:
                ship_char("F")
                ship_line(line)

if expect is None:
    ship_line("Missing a plan.")
    xstatus = 1
elif test_before_plan and test_after_plan:
    ship_line("A plan line may only be placed before or after all tests.")
    xstatus = 1
elif expect > testcount:
    ship_line("Expected %d tests but only %d ran." % (expect, testcount))
    xstatus = 1
elif expect < testcount:
    ship_line("Expected %d tests but %d ran." % (expect, testcount))
    xstatus = 1

lastline = "%d tests, %d failures" % (testcount, failcount)

if todocount:
    lastline += ", %d TODOs" % todocount

if skipcount:
    lastline += ", %d SKIPs" % skipcount

lastline += "."

lastline = re.sub(r"\b(1 \w+)s\b", r"\1", lastline)

ship_line(lastline)

print_report()

sys.exit(xstatus)
