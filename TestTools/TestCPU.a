    opt     o-,a+ ; disable optimisations BUT keep pc-relative pea's etc

    macro   DebugStr
    pea     LengthByte\@
    dc.w    $ABFF
    bra.s   Skip\@
LengthByte\@
    dc.b    StrEnd\@-StrStart\@
StrStart\@
    dc.b    \1
StrEnd\@
    even
Skip\@
    endm

    macro   n0
    bpl.s   Dont\@
    DebugStr 'BAD: n=1'
Dont\@
    endm

    macro   n1
    bmi.s   Dont\@
    DebugStr 'BAD: n=0'
Dont\@
    endm

    macro   z0
    bne.s   Dont\@
    DebugStr 'BAD: z=1'
Dont\@
    endm

    macro   z1
    beq.s   Dont\@
    DebugStr 'BAD: z=0'
Dont\@
    endm

    macro   v0
    bvc.s   Dont\@
    DebugStr 'BAD: v=1'
Dont\@
    endm

    macro   v1
    bvs.s   Dont\@
    DebugStr 'BAD: v=0'
Dont\@
    endm

    macro   c0
    bcc.s   Dont\@
    DebugStr 'BAD: c=1'
Dont\@
    endm

    macro   c1
    bcs.s   Dont\@
    DebugStr 'BAD: c=0'
Dont\@
    endm


ApplScratch equ $A78


    DebugStr 'Test: add dn,dn'
    move.w  #$8000,d3
    move.w  #$8000,d4
    add.w   d3,d4
    n0
    z1
    v1
    c1

    DebugStr 'Test: add an,dn'
    movea.w #$3288,a3
    move.w  #$8968,d3
    add.w   a3,d3
    n1
    z0
    v0
    c0
    cmp.w   #$bbf0,d3
    z1

    DebugStr 'Test: add (an),dn'
    movea.w #ApplScratch,a3
    move.w  #$9963,(a3)
    move.w  #$4404,d5
    add.w   (a3),d5
    n1
    z0
    v0
    c0

    DebugStr 'Test: add (an)+,dn'
    movea.w #ApplScratch,a3
    move.w  #$4aa0,(a3)
    move.w  #$4f66,d5
    add.w   (a3)+,d5
    n1
    z0
    v1
    c0

    DebugStr 'Test: add -(an),dn'
    movea.w #ApplScratch,a3
    move.w  #$d056,(a3)+
    move.w  #$9b8d,d5
    add.w   -(a3),d5
    n0
    z0
    v1
    c1

    DebugStr 'Test: add d(an),dn'
    movea.w #ApplScratch,a3
    move.w  #$ace9,ApplScratch+10
    move.w  #$139a,d5
    add.w   10(a3),d5
    n1
    z0
    v0
    c0

    DebugStr 'Test: add d(an,dn),dn'
    movea.w #ApplScratch,a3
    move.w  #10,d0
    move.w  #$cfe0,ApplScratch+20
    move.w  #$3e58,d5
    add.w   10(a3,d0),d5
    n0
    z0
    v0
    c1

    DebugStr 'Test: add pcrel,dn'
    bra.s   .skip
.x  dc.w    $8f8c
.skip
    move.w  #$fe38,d1
    add.w   (pc,.x),d1
    n1
    z0
    v0
    c1

    DebugStr 'Test: add pcrel(xn),dn'
    bra.s   .skip
.x  dc.w    $0,$0,$0,$9b56
.skip
    move.w  #6,d0
    move.w  #$bbc5,d1
    add.w   (pc,.x,d0),d1
    n0
    z0
    v1
    c1

    DebugStr 'Test: add abs.w,dn'
    move.w  #$7ae8,ApplScratch
    move.w  #$e73a,d7
    add.w   (ApplScratch).w,d7
    n0
    z0
    v0
    c1

    DebugStr 'Test: add abs.l,dn'
    move.w  #$61ba,ApplScratch
    move.w  #$f028,d7
    add.w   (ApplScratch).l,d7
    n0
    z0
    v0
    c1

    DebugStr 'Test: add #imm,dn'
    move.w  #$fa4e,d7
    add.w   #$8771,d7
    n1
    z0
    v0
    c1

    DebugStr 'finished tests'
    dc.w    $A9F4
