    opt     o-,a+ ; disable optimisations BUT keep pc-relative pea's etc

    bra     Main


PrintStrFunc
    dc.w    $AFFF ; debugstr autopop

; Push a pascal string to the stack
    macro   PushStr
    bra     .Skip\@
.StrStart\@
    dc.b    .StrEnd\@-.StrStart\@-1
    dc.b    \1
.StrEnd\@
    even
.Skip\@
    pea     .StrStart\@
    endm

; Same, but with a CR after the string
    macro   PushStrLine
    bra     .Skip\@
.StrStart\@
    dc.b    .StrEnd\@-.StrStart\@-1
    dc.b    \1, 13
.StrEnd\@
    even
.Skip\@
    pea     .StrStart\@
    endm

; Alternative to bra.l on 68000
    macro   bsrLong
.base\@
    pea     .return\@
    pea     .base\@
    add.l   #\1-.base\@,(sp)
    rts
.return\@
    endm

; Invoke before each test, with the test name as an argument
    rsreset
    macro   StartOfTest
    rs.b    1 ; increment __RS
    bra     .Skip\@
.StrStart\@
    dc.b    .StrEnd\@-.StrStart\@-1
    dc.b    'ok \<__RS> - ', \1, 13
.StrEnd\@
    even
.Skip\@
    pea     .StrStart\@
    move.l  (sp)+,-$7ffc(a5)
    clr.b   -$8000(a5) ; "all is well"
    endm

; Invoke after each test, to print the test name with 'ok' or 'not ok'
    macro   EndOfTest
    tst.b   -$8000(a5)
    beq.s   .allgood\@
    PushStr 'not '
    bsrLong PrintStrFunc
.allgood\@
    move.l  -$7ffc(a5),-(sp)
    bsrLong PrintStrFunc
    endm

; Print the 1..n at the very end
    macro   PrintPlan
    bra     .Skip\@
.StrStart\@
    dc.b    .StrEnd\@-.StrStart\@-1
    dc.b    '1..\<__RS>', 13
.StrEnd\@
    even
.Skip\@
    pea     .StrStart\@
    bsrLong PrintStrFunc
    endm

    macro   n0
    bpl.s   Dont\@
    st      -$8000(a5)
    PushStrLine '# BAD: n=1'
    bsrLong PrintStrFunc
Dont\@
    endm

    macro   n1
    bmi.s   Dont\@
    st      -$8000(a5)
    PushStrLine '# BAD: n=0'
    bsrLong PrintStrFunc
Dont\@
    endm

    macro   z0
    bne.s   Dont\@
    st      -$8000(a5)
    PushStrLine '# BAD: z=1'
    bsrLong PrintStrFunc
Dont\@
    endm

    macro   z1
    beq.s   Dont\@
    st      -$8000(a5)
    PushStrLine '# BAD: z=0'
    bsrLong PrintStrFunc
Dont\@
    endm

    macro   v0
    bvc.s   Dont\@
    st      -$8000(a5)
    PushStrLine '# BAD: v=1'
    bsrLong PrintStrFunc
Dont\@
    endm

    macro   v1
    bvs.s   Dont\@
    st      -$8000(a5)
    PushStrLine '# BAD: v=0'
    bsrLong PrintStrFunc
Dont\@
    endm

    macro   c0
    bcc.s   Dont\@
    st      -$8000(a5)
    PushStrLine '# BAD: c=1'
    bsrLong PrintStrFunc
Dont\@
    endm

    macro   c1
    bcs.s   Dont\@
    st      -$8000(a5)
    PushStrLine '# BAD: c=0'
    bsrLong PrintStrFunc
Dont\@
    endm

    macro   x0 ; sets z to !x
    move    sr,-(sp)
    btst.b  #4,1(sp)
    addq    #2,sp
    beq.s   Dont\@
    st      -$8000(a5)
    PushStrLine '# BAD: x=1'
    bsrLong PrintStrFunc
Dont\@
    endm

    macro   x1 ; sets z to !x
    move    sr,-(sp)
    btst.b  #4,1(sp)
    addq    #2,sp
    bne.s   Dont\@
    st      -$8000(a5)
    PushStrLine '# BAD: x=0'
    bsrLong PrintStrFunc
Dont\@
    endm

ApplScratch equ $A78

Main

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    StartOfTest 'add dn,dn'
    move.w  #$8000,d3
    move.w  #$8000,d4
    add.w   d3,d4
    n0
    z1
    v1
    c1
    x1
    EndOfTest

    StartOfTest 'add an,dn'
    movea.w #$3288,a3
    move.w  #$8968,d3
    add.w   a3,d3
    n1
    z0
    v0
    c0
    x0
    cmp.w   #$bbf0,d3
    z1
    EndOfTest

    StartOfTest 'add (an),dn'
    movea.w #ApplScratch,a3
    move.w  #$9963,(a3)
    move.w  #$4404,d5
    add.w   (a3),d5
    n1
    z0
    v0
    c0
    x0
    EndOfTest

    StartOfTest 'add (an)+,dn'
    movea.w #ApplScratch,a3
    move.w  #$4aa0,(a3)
    move.w  #$4f66,d5
    add.w   (a3)+,d5
    n1
    z0
    v1
    c0
    x0
    EndOfTest

    StartOfTest 'add -(an),dn'
    movea.w #ApplScratch,a3
    move.w  #$d056,(a3)+
    move.w  #$9b8d,d5
    add.w   -(a3),d5
    n0
    z0
    v1
    c1
    x1
    EndOfTest

    StartOfTest 'add d(an),dn'
    movea.w #ApplScratch,a3
    move.w  #$ace9,ApplScratch+10
    move.w  #$139a,d5
    add.w   10(a3),d5
    n1
    z0
    v0
    c0
    x0
    EndOfTest

    StartOfTest 'add d(an,dn),dn'
    movea.w #ApplScratch,a3
    move.w  #10,d0
    move.w  #$cfe0,ApplScratch+20
    move.w  #$3e58,d5
    add.w   10(a3,d0),d5
    n0
    z0
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'add pcrel,dn'
    bra.s   .skip
.x  dc.w    $8f8c
.skip
    move.w  #$fe38,d1
    add.w   (pc,.x),d1
    n1
    z0
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'add pcrel(xn),dn'
    bra.s   .skip
.x  dc.w    $0,$0,$0,$9b56
.skip
    move.w  #6,d0
    move.w  #$bbc5,d1
    add.w   (pc,.x,d0),d1
    n0
    z0
    v1
    c1
    x1
    EndOfTest

    StartOfTest 'add abs.w,dn'
    move.w  #$7ae8,ApplScratch
    move.w  #$e73a,d7
    add.w   (ApplScratch).w,d7
    n0
    z0
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'add abs.l,dn'
    move.w  #$61ba,ApplScratch
    move.w  #$f028,d7
    add.w   (ApplScratch).l,d7
    n0
    z0
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'add #imm,dn'
    move.w  #$fa4e,d7
    add.w   #$8771,d7
    n1
    z0
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'add dn,abs.w'
    move.w  #$2c7e,(ApplScratch).w
    move.w  #$743e,d7
    add.w   d7,(ApplScratch).w
    n1
    z0
    v1
    c0
    x0
    cmp.w   #$A0BC,(ApplScratch).w
    z1
    EndOfTest

    StartOfTest 'addi #imm,dn'
    move.w  #$e27c,d7
    addi.w  #$9a70,d7
    n0
    z0
    v1
    c1
    x1
    EndOfTest

    StartOfTest 'addi #imm,abs.w'
    move.w  #$2c21,ApplScratch
    addi.w  #$b2aa,(ApplScratch).w
    n1
    z0
    v0
    c0
    x0
    EndOfTest

    StartOfTest 'addq #imm,dn'
    move.w  #$7ffc,d7
    addq.w  #8,d7
    n1
    z0
    v1
    c0
    x0
    EndOfTest

    StartOfTest 'addq #imm,abs.w'
    move.w  #$ffff,ApplScratch
    addq.w  #1,(ApplScratch).w
    n0
    z1
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'addx dn,dn'
    ori     #$10,ccr ; set x bit
    move.l  #$fffffffe,d0
    move.l  #1,d1
    addx.l  d1,d0
    n0
    z0 ; should be preserved from before addx
    v0
    c1
    x1
    tst.l   d0
    z1
    EndOfTest

    StartOfTest 'addx -(an),-(an)'
    lea     ApplScratch+4,a2
    lea     ApplScratch+8,a3
    move.l  #$670ee7f1,-4(a2)
    move.l  #$e800422a,-4(a3)
    move    #$04,ccr ; x=0,z=1
    addx.b  -(a2),-(a3)
    addx.b  -(a2),-(a3)
    addx.b  -(a2),-(a3)
    addx.b  -(a2),-(a3)
    n0
    z0 ; gets cleared if any addx is nonzero
    v0
    c1
    x1
    cmp.l   #$4f0f2a1b,(a3)
    z1
    EndOfTest

    StartOfTest 'and abs.w,dn'
    ori     #$1f,ccr
    move.w  #$9288,d3
    move.w  #$d878,ApplScratch
    and.w   (ApplScratch).w,d3
    n1
    z0
    v0
    c0
    x1 ; untouched
    cmp.w   #$9008,d3
    z1
    EndOfTest

    StartOfTest 'and dn,abs.w'
    andi    #0,ccr
    move.w  #$a11f,d3
    move.w  #$5ee0,ApplScratch ; its inverse
    and.w   d3,(ApplScratch).w
    n0
    z1
    v0
    c0
    x0 ; untouched
    EndOfTest

    StartOfTest 'andi #imm,abs.w'
    andi    #0,ccr
    move.l  #$16dc3b11,ApplScratch
    andi.l  #$3127441d,(ApplScratch).w
    n0
    z0
    v0
    c0
    x0 ; untouched
    cmp.l   #$10040011,ApplScratch
    z1
    EndOfTest

    StartOfTest 'asl dn,dn'
    move.w  #$1003,d0
    move.w  #$5555,d1
    asl.w   d0,d1
    n1
    z0
    v1 ; msb changed in any iteration
    c0
    x0
    cmp.w   #$aaa8,d1
    z1
    asl.w   d0,d1
    n0
    z0
    v1
    c1
    x1
    move.w  #$0000,d1
    asl.w   d0,d1
    v0 ; msb never changed
    EndOfTest

    StartOfTest 'asr dn,dn'
    move    #$02,ccr ; set v only, to confirm it is cleared
    move.w  #$0002,d0
    move.w  #$8002,d1
    asr.w   d0,d1
    n1
    z0
    v0 ; msb changed in any iteration
    c1
    x1
    EndOfTest

    StartOfTest 'asl #imm,dn'
    move.l  #$695f0ebd,d0
    asl.l   #8,d0
    cmp.l   #$5f0ebd00,d0
    z1
    EndOfTest

    StartOfTest 'asr #imm,dn'
    move.l  #$5d10831b,d0
    asr.l   #2,d0
    cmp.l   #$174420c6,d0 ; no sign extension, behold
    z1
    EndOfTest

    StartOfTest 'asr abs.w'
    move.w  #$2244,ApplScratch
    asr.w   (ApplScratch).w
    cmp.w   #$1122,ApplScratch
    z1
    EndOfTest

    StartOfTest 'asl abs.w'
    move.w  #$2244,ApplScratch
    asl.w   (ApplScratch).w
    cmp.w   #$4488,ApplScratch
    z1
    EndOfTest

    StartOfTest 'bchg dn,abs.w'
    move.w  #44,d4
    move.b  #$10,ApplScratch
    bchg.b  d4,ApplScratch.w
    z0
    bchg.b  d4,ApplScratch.w
    z1
    bchg.b  d4,ApplScratch.w
    z0
    EndOfTest

    StartOfTest 'bchg #imm,abs.w'
    move.b  #$10,ApplScratch
    move    #$1f,ccr
    bchg.b  #3,ApplScratch.w
    z1
    bchg.b  #3,ApplScratch.w
    z0
    bchg.b  #3,ApplScratch.w
    z1
    n1 ; all these bits should be untouched...
    v1
    c1
    x1
    EndOfTest

    StartOfTest 'bclr dn,abs.w'
    move.w  #44,d4
    move.b  #$10,ApplScratch
    bclr.b  d4,ApplScratch.w
    z0
    bclr.b  d4,ApplScratch.w
    z1
    bclr.b  d4,ApplScratch.w
    z1
    EndOfTest

    StartOfTest 'bclr #imm,abs.w'
    move.b  #$10,ApplScratch
    bclr.b  #3,ApplScratch.w
    z1
    bclr.b  #3,ApplScratch.w
    z1
    bclr.b  #3,ApplScratch.w
    z1
    EndOfTest

    StartOfTest 'bset dn,abs.w'
    move.w  #44,d4
    move.b  #$10,ApplScratch
    bset.b  d4,ApplScratch.w
    z0
    bset.b  d4,ApplScratch.w
    z0
    bset.b  d4,ApplScratch.w
    z0
    EndOfTest

    StartOfTest 'bset #imm,abs.w'
    move.b  #$10,ApplScratch
    bset.b  #3,ApplScratch.w
    z1
    bset.b  #3,ApplScratch.w
    z0
    bset.b  #3,ApplScratch.w
    z0
    EndOfTest

    StartOfTest 'btst dn,abs.w'
    move.w  #44,d4
    move.b  #$10,ApplScratch
    btst.b  d4,ApplScratch.w
    z0
    btst.b  d4,ApplScratch.w
    z0
    btst.b  d4,ApplScratch.w
    z0
    EndOfTest

    StartOfTest 'btst #imm,abs.w'
    move.b  #$10,ApplScratch
    btst.b  #3,ApplScratch.w
    z1
    btst.b  #3,ApplScratch.w
    z1
    btst.b  #3,ApplScratch.w
    z1
    EndOfTest

    StartOfTest 'chk #imm,dn'
    move.w  #10,d0 ; lame test
    chk     #10,d0
    EndOfTest

    StartOfTest 'clr abs.w'
    move.w  #-1,ApplScratch.w
    tst.w   ApplScratch.w
    z0
    clr.w   ApplScratch.w
    n0
    z1
    v0
    c0
    tst.w   ApplScratch.w
    z1
    EndOfTest

    StartOfTest 'cmp #imm,dn'
    move    #$1f,ccr
    move.w  #$c000,d0
    cmp.w   #$c000,d0
    n0
    z1
    v0
    c0
    x1 ; because we set it above
    cmp.w   #$bfff,d0
    n0
    z0
    v0
    c0
    x1 ; because we set it above
    cmp.w   #$c001,d0
    n1
    z0
    v0
    c1
    x1 ; because we set it above
    EndOfTest

    StartOfTest 'cmpa #imm,an' ; lifted from cmp tests
    move    #$1f,ccr
    move.l  #$ffffc000,a0
    cmpa.w  #$c000,a0
    n0
    z1
    v0
    c0
    x1 ; because we set it above
    cmpa.w  #$bfff,a0
    n0
    z0
    v0
    c0
    x1 ; because we set it above
    cmpa.w  #$c001,a0
    n1
    z0
    v0
    c1
    x1 ; because we set it above
    EndOfTest

    StartOfTest 'cmpi #imm,(an)' ; lifted from cmp tests
    move    #$1f,ccr
    lea     ApplScratch,a0
    move.w  #$c000,(a0)
    cmpi.w  #$c000,(a0)
    n0
    z1
    v0
    c0
    x1 ; because we set it above
    cmpi.w  #$bfff,(a0)
    n0
    z0
    v0
    c0
    x1 ; because we set it above
    cmpi.w  #$c001,(a0)
    n1
    z0
    v0
    c1
    x1 ; because we set it above
    EndOfTest

    StartOfTest 'cmpm (an)+,(an)+'
    move    #$1f,ccr
    lea     ApplScratch,a0
    lea     ApplScratch+2,a1
    move.l  #$01010100,(a0)
    cmpm.b  (a0)+,(a1)+
    n0
    z1
    v0
    c0
    x1 ; because we set it above
    cmpm.b  (a0)+,(a1)+
    n1
    z0
    v0
    c1
    x1 ; because we set it above
    EndOfTest

    StartOfTest 'dbf dn,targ'
    clr.l   d3
    move.l  #$1000f,d0 ; top should be ignored, do 16 iterations
.lp addq.l  #1,d3
    dbf     d0,.lp
    cmp.l   #$10,d3
    z1
    cmp.l   #$0001ffff,d0
    z1
    EndOfTest

    StartOfTest 'dbeq dn,targ'
    clr.l   d3
    move.l  #$1000f,d0 ; top should be ignored, do 16 iterations
.lp addq.l  #1,d3
    cmp.w   #8,d3 ; only do half the iterations
    dbeq    d0,.lp
    cmp.l   #$8,d3 ; did the right number of iterations?
    z1
    cmp.l   #$00010008,d0 ; "eq" get tested before ctr decremented?
    z1
    EndOfTest

    StartOfTest 'divu #imm,dn'
    move.l  #10,d0
    divu    #3,d0
    n0
    z0
    v0
    c0
    cmp.l   #$00010003,d0
    z1
    EndOfTest

    StartOfTest 'divs #imm,dn'
    move.l  #10,d0
    divu    #3,d0
    n0
    z0
    v0
    c0
    cmp.l   #$00010003,d0 ; q3 r1
    z1

    move.l  #10,d0
    divs    #-3,d0
    n1
    z0
    v0
    c0
    cmp.l   #$0001fffd,d0 ; q-3 r1
    z1

    move.l  #-10,d0
    divs    #3,d0
    n1
    z0
    v0
    c0
    cmp.l   #$fffffffd,d0 ; q-3 r-1
    z1

    move.l  #-10,d0
    divs    #-3,d0
    n0
    z0
    v0
    c0
    cmp.l   #$ffff0003,d0 ; q3 r-1
    z1
    EndOfTest

    StartOfTest 'eor dn,abs.w'
    move    #$03,ccr
    move.l  #$4328736d,ApplScratch
    move.l  #$cbcca890,d0
    eor.l   d0,ApplScratch.w
    n1
    z0
    v0
    c0
    cmp.l   #$88e4dbfd,ApplScratch
    z1
    EndOfTest

    StartOfTest 'eori #imm,abs.w'
    move    #$03,ccr
    move.l  #$bf1f5142,ApplScratch
    eori.l  #$e626941d,ApplScratch.w
    n0
    z0
    v0
    c0
    cmp.l   #$5939c55f,ApplScratch
    z1
    EndOfTest

    StartOfTest 'eori #imm,ccr'
    move    #$00,ccr
    eori    #$1f,ccr
    move    sr,d0
    cmpi.b  #$1f,d0
    z1
    EndOfTest

    StartOfTest 'exg dn,dn'
    move.l  #-1,d0
    move.l  #1,d1
    exg     d0,d1
    cmp.l   #1,d0
    z1
    cmp.l   #-1,d1
    z1
    EndOfTest

    StartOfTest 'exg an,dn'
    move.l  #-1,d0
    move.l  #1,a1
    exg     d0,a1
    cmp.l   #1,d0
    z1
    cmp.l   #-1,a1
    z1
    EndOfTest

    StartOfTest 'exg an,an'
    move.l  #-1,a0
    move.l  #1,a1
    exg     a0,a1
    cmp.l   #1,a0
    z1
    cmp.l   #-1,a1
    z1
    EndOfTest

    StartOfTest 'ext.l dn'
    move.l  #$736f8c72,d4
    ext.l   d4
    n1
    z0
    v0
    c0
    cmp.l   #$ffff8c72,d4
    z1
    EndOfTest

    StartOfTest 'ext.w dn'
    move.l  #$736f8c72,d4
    ext.w   d4
    n0
    z0
    v0
    c0
    cmp.l   #$736f0072,d4
    z1
    EndOfTest

    StartOfTest 'ext.w dn'
    move.l  #$736f8c72,d4
    ext.w   d4
    n0
    z0
    v0
    c0
    cmp.l   #$736f0072,d4
    z1
    EndOfTest

    StartOfTest 'jmp (d,pc,xn)'
    move.l  #$1111fffc,a0
    jmp     (pc,jmpx+4,a0.w)
    PushStr '# BAD: fell short'
    bsrLong PrintStrFunc
jmpx
    bra.s   jmpy
    PushStr '# BAD: fell long'
    bsrLong PrintStrFunc
jmpy
    EndOfTest

    StartOfTest 'jsr (d,pc)'
    jsr     jsrx
    bra.s   jsry
jsrx
    rts
jsry
    EndOfTest

    StartOfTest 'lea d(an),an'
    move.l  #$00014000,a0
    lea     -$8000(a0),a1
    cmp.l   #$0000c000,a1
    z1
    EndOfTest

    StartOfTest 'link a6,#imm'
    move.l  #$12345678,a6
    lea     -4(sp),a0
    move.l  a6,a1
    lea     -14(sp),a2
    link    a6,#-10
    cmp.l   a6,a0
    z1
    cmp.l   (a6),a1
    z1
    cmp.l   sp,a2
    z1
    add.w   #14,sp
    EndOfTest

    StartOfTest 'lsr dn'
    move.w  #$8111,d0
    move    #$02,ccr ; set v to see it cleared
    lsr.w   d0
    n0
    z0
    v0
    c1
    x1
    cmp.w   #$4088,d0
    z1
    EndOfTest

    StartOfTest 'lsl dn'
    move.w  #$c111,d0
    move    #$02,ccr ; set v to see it cleared
    lsl.w   d0
    n1
    z0
    v0
    c1
    x1
    cmp.w   #$8222,d0
    z1
    EndOfTest

    StartOfTest 'move dn,abs.w'
    move    #$1f,ccr
    move.l  #$79e1182c,d0
    move.l  d0,ApplScratch.w
    n0
    z0
    v0
    c0
    x1
    cmp.l   #$79e1182c,ApplScratch.w
    z1
    EndOfTest

    StartOfTest 'movea dn,an'
    move.l  #$79e1182c,d0
    move    #$1f,ccr
    movea.l d0,a1
    n1 ; all one because untouched
    z1
    v1
    c1
    x1
    cmp.l   #$79e1182c,a1
    z1
    EndOfTest

    StartOfTest 'move dn,ccr'
    move.b  #$15,d0
    move    d0,ccr
    n0
    z1
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'move sr,dn'
    move.l  #-1,d0
    clr.w   d0
    move    sr,d0
    and.w   #$000f,d0
    cmp.l   #$ffff0004,d0
    z1
    EndOfTest

    StartOfTest 'move dn,sr'
    move    sr,d5 ; preserve upper byte on real machines
    move.b  #$15,d5
    move    d5,sr
    n0
    z1
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'movem.l regs,-(an)'
    move.w  #$c0de,-(sp)
    move.l  #$11111111,d0
    move.l  #$22222222,d1
    move.l  #$33333333,a2
    move.l  #$44444444,a3
    movem.l d0/d1/a2/a3,-(sp)
    cmp.l   #$11111111,(sp)+
    z1
    cmp.l   #$22222222,(sp)+
    z1
    cmp.l   #$33333333,(sp)+
    z1
    cmp.l   #$44444444,(sp)+
    z1
    cmp.w   #$c0de,(sp)+ ; check stack
    z1
    EndOfTest

    StartOfTest 'movem.w regs,-(an)'
    move.w  #$c0de,-(sp)
    move.w  #$1111,d0
    move.w  #$2222,d1
    move.w  #$3333,a2
    move.w  #$4444,a3
    movem.w d0/d1/a2/a3,-(sp)
    cmp.w   #$1111,(sp)+
    z1
    cmp.w   #$2222,(sp)+
    z1
    cmp.w   #$3333,(sp)+
    z1
    cmp.w   #$4444,(sp)+
    z1
    cmp.w   #$c0de,(sp)+ ; check stack
    z1
    EndOfTest

    StartOfTest 'movem.l (an)+,regs'
    move.w  #$c0de,-(sp)
    move.l  #$66666666,-(sp)
    move.l  #$77777777,-(sp)
    move.l  #$88888888,-(sp)
    move.l  #$99999999,-(sp)
    movem.l (sp)+,d4/d5/a0/a1
    cmp.l   #$99999999,d4
    z1
    cmp.l   #$88888888,d5
    z1
    cmp.l   #$77777777,a0
    z1
    cmp.l   #$66666666,a1
    z1
    cmp.w  #$c0de,(sp)+
    z1
    EndOfTest

    StartOfTest 'movem.w (an)+,regs'
    move.w  #$c0de,-(sp)
    move.w  #$7777,-(sp)
    move.w  #$8888,-(sp)
    move.w  #$6666,-(sp)
    move.w  #$9999,-(sp)
    movem.w (sp)+,d4/d5/a0/a1
    cmp.l   #$ffff9999,d4 ; test sign extension
    z1
    cmp.l   #$00006666,d5
    z1
    cmp.l   #$ffff8888,a0
    z1
    cmp.l   #$00007777,a1
    z1
    cmp.w  #$c0de,(sp)+
    z1
    EndOfTest

    StartOfTest 'movem.l regs,(an)'
    lea     ApplScratch,a0
    move.l  #$11111111,d0
    move.l  #$22222222,d1
    move.l  #$33333333,a2
    move.l  #$44444444,a3
    movem.l d0/d1/a2/a3,(a0)
    cmp.l   #$11111111,(a0)
    z1
    cmp.l   #$22222222,4(a0)
    z1
    cmp.l   #$33333333,8(a0)
    z1
    cmp.l   #$44444444,12(a0)
    z1
    EndOfTest

    StartOfTest 'movem.l (an),regs'
    lea     ApplScratch,a0
    move.l  #$aaaaaaaa,(a0)
    move.l  #$bbbbbbbb,4(a0)
    move.l  #$cccccccc,8(a0)
    move.l  #$dddddddd,12(a0)
    movem.l (a0),d0/d1/a2/a3
    cmp.l   #$aaaaaaaa,d0
    z1
    cmp.l   #$bbbbbbbb,d1
    z1
    cmp.l   #$cccccccc,a2
    z1
    cmp.l   #$dddddddd,a3
    z1
    EndOfTest

    StartOfTest 'moveq #imm,dn'
    ori     #$1f,sr ; set all bits
    moveq.l #0,d0
    n0
    z1
    v0
    c0
    cmp.l   #0,d0
    z1
    moveq.l #-2,d0
    n1
    z0
    v0
    c0
    cmp.l   #-2,d0
    z1
    moveq.l #127,d0
    n0
    z0
    v0
    c0
    cmp.l   #127,d0
    z1
    EndOfTest

    StartOfTest 'mulu #imm,dn'
    move.w  #40000,d0
    mulu    #39000,d0
    n0
    z0
    v0
    c0
    cmp.l   #40000*39000,d0
    z1
    EndOfTest

    StartOfTest 'muls #imm,dn'
    move.w  #-20000,d0
    muls    #-30000,d0
    n0
    z0
    v0
    c0
    cmp.l   #20000*30000,d0
    z1
    EndOfTest

    StartOfTest 'neg dn 0'
    move.w  #0,d0
    neg     d0
    n0
    z1
    v0
    c0
    cmp.w   #0,d0
    z1
    EndOfTest

    StartOfTest 'neg dn 1'
    move.w  #1,d0
    neg     d0
    n1
    z0
    v0
    c1
    cmp.w   #-1,d0
    z1
    EndOfTest

    StartOfTest 'neg dn -1'
    move.w  #-1,d0
    neg     d0
    n0
    z0
    v0
    c1
    cmp.w   #1,d0
    z1
    EndOfTest

    StartOfTest 'negx -(an)'
    lea     ApplScratch+4,a2
    move.l  #123456,ApplScratch
    move    #$00,ccr ; clear x
    negx.b  -(a2)
    negx.b  -(a2)
    negx.b  -(a2)
    negx.b  -(a2)
    cmp.l   #-123456,ApplScratch
    z1
    EndOfTest

    StartOfTest 'nop'
    nop
    EndOfTest

    StartOfTest 'not dn'
    move.b  #%01101110,d3
    move    #$1f,ccr ; check that v/c get zeroed
    not.b   d3
    n1
    z0
    v0
    c0
    x1 ; untouched
    cmp.b   #%10010001,d3
    z1
    EndOfTest

    StartOfTest 'or abs.w,dn'
    move.w  #$f0f0,d2
    move.w  #$00ff,ApplScratch.w
    move    #$1f,ccr ; check that v/c get zeroed
    or.w    ApplScratch.w,d2
    n1
    z0
    v0
    c0
    x1 ; untouched
    cmp.w   #$f0ff,d2
    z1
    EndOfTest

    StartOfTest 'or dn,abs.w'
    move.w  #$f0f0,d2
    move.w  #$00ff,ApplScratch.w
    move    #$1f,ccr ; check that v/c get zeroed
    or.w    d2,ApplScratch.w
    n1
    z0
    v0
    c0
    x1 ; untouched
    cmp.w   #$f0ff,ApplScratch.w
    z1
    EndOfTest

    StartOfTest 'ori #imm,d(an)'
    move.w  #$0888,-100(a5)
    move    #$1f,ccr ; check that v/c get zeroed
    ori.w   #$0082,-100(a5)
    n0
    z0
    v0
    c0
    x1 ; untouched
    cmp.w   #$088a,-100(a5)
    z1
    EndOfTest

    StartOfTest 'ori #imm,ccr'
    move    #$10,ccr
    ori     #$02,ccr
    n0
    z0
    v1
    c0
    x1

    EndOfTest

    StartOfTest 'ori #imm,sr'
    move    #$10,ccr
    ori     #$02,sr
    n0
    z0
    v1
    c0
    x1
    EndOfTest

    StartOfTest 'pea d(an)'
    move.w  #$7676,-100(a5)
    pea     -100(a5)
    move.l  (sp)+,a0
    cmp.w   #$7676,(a0)
    z1
    EndOfTest

    StartOfTest 'rol #imm,dn'
    move.w  #$4000,d0
    rol.w   #2,d0
    n0
    z0
    v0
    c1
    cmp.w   #$0001,d0
    z1

    move.w  #$4000,d0
    rol.w   #1,d0
    n1
    z0
    v0
    c0
    cmp.w   #$8000,d0
    z1
    EndOfTest

    StartOfTest 'ror #imm,dn'
    move.w  #$0002,d0
    ror.w   #2,d0
    n1
    z0
    v0
    c1
    cmp.w   #$8000,d0
    z1

    move.w  #$0002,d0
    ror.w   #1,d0
    n0
    z0
    v0
    c0
    cmp.w   #$0001,d0
    z1
    EndOfTest

    StartOfTest 'roxl -(an)'
    lea     ApplScratch.w,a4
    move.l  #$88008080,(a4)+
    move    #$00,ccr
    roxl.w  -(a4)
    roxl.w  -(a4)
    x1
    cmp.l   #$10010101,(a4)
    EndOfTest

    StartOfTest 'roxr -(an)'
    lea     ApplScratch.w,a4
    move.l  #$11001010,(a4)
    move    #$00,ccr
    roxr.w  (a4)+
    roxr.w  (a4)+
    x0
    cmp.l   #$08800808,-(a4)
    EndOfTest

    StartOfTest 'rtr'
    bra.s   rtr_skip
rtr_fakefunction
    move.w  #$0005,-(sp) ; pretend to save
    rtr
rtr_skip
    bsr     rtr_fakefunction
    move    sr,d0
    cmp.b   #$05,d0
    z1
    EndOfTest

    StartOfTest 'rts'
    pea     rts_here
    rts
    dc.w    $a9ff
rts_here
    EndOfTest

    StartOfTest 'nxvc=0000; st dn'
    move    #%0000,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0001; st dn'
    move    #%0001,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0010; st dn'
    move    #%0010,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0011; st dn'
    move    #%0011,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0100; st dn'
    move    #%0100,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0101; st dn'
    move    #%0101,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0110; st dn'
    move    #%0110,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0111; st dn'
    move    #%0111,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1000; st dn'
    move    #%1000,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1001; st dn'
    move    #%1001,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1010; st dn'
    move    #%1010,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1011; st dn'
    move    #%1011,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1100; st dn'
    move    #%1100,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1101; st dn'
    move    #%1101,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1110; st dn'
    move    #%1110,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1111; st dn'
    move    #%1111,ccr
    st      d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0000; sf dn'
    move    #%0000,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0001; sf dn'
    move    #%0001,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0010; sf dn'
    move    #%0010,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0011; sf dn'
    move    #%0011,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0100; sf dn'
    move    #%0100,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0101; sf dn'
    move    #%0101,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0110; sf dn'
    move    #%0110,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0111; sf dn'
    move    #%0111,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1000; sf dn'
    move    #%1000,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1001; sf dn'
    move    #%1001,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1010; sf dn'
    move    #%1010,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1011; sf dn'
    move    #%1011,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1100; sf dn'
    move    #%1100,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1101; sf dn'
    move    #%1101,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1110; sf dn'
    move    #%1110,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1111; sf dn'
    move    #%1111,ccr
    sf      d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0000; shi dn'
    move    #%0000,ccr
    shi     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0001; shi dn'
    move    #%0001,ccr
    shi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0010; shi dn'
    move    #%0010,ccr
    shi     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0011; shi dn'
    move    #%0011,ccr
    shi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0100; shi dn'
    move    #%0100,ccr
    shi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0101; shi dn'
    move    #%0101,ccr
    shi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0110; shi dn'
    move    #%0110,ccr
    shi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0111; shi dn'
    move    #%0111,ccr
    shi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1000; shi dn'
    move    #%1000,ccr
    shi     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1001; shi dn'
    move    #%1001,ccr
    shi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1010; shi dn'
    move    #%1010,ccr
    shi     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1011; shi dn'
    move    #%1011,ccr
    shi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1100; shi dn'
    move    #%1100,ccr
    shi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1101; shi dn'
    move    #%1101,ccr
    shi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1110; shi dn'
    move    #%1110,ccr
    shi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1111; shi dn'
    move    #%1111,ccr
    shi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0000; sls dn'
    move    #%0000,ccr
    sls     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0001; sls dn'
    move    #%0001,ccr
    sls     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0010; sls dn'
    move    #%0010,ccr
    sls     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0011; sls dn'
    move    #%0011,ccr
    sls     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0100; sls dn'
    move    #%0100,ccr
    sls     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0101; sls dn'
    move    #%0101,ccr
    sls     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0110; sls dn'
    move    #%0110,ccr
    sls     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0111; sls dn'
    move    #%0111,ccr
    sls     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1000; sls dn'
    move    #%1000,ccr
    sls     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1001; sls dn'
    move    #%1001,ccr
    sls     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1010; sls dn'
    move    #%1010,ccr
    sls     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1011; sls dn'
    move    #%1011,ccr
    sls     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1100; sls dn'
    move    #%1100,ccr
    sls     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1101; sls dn'
    move    #%1101,ccr
    sls     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1110; sls dn'
    move    #%1110,ccr
    sls     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1111; sls dn'
    move    #%1111,ccr
    sls     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0000; scc dn'
    move    #%0000,ccr
    scc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0001; scc dn'
    move    #%0001,ccr
    scc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0010; scc dn'
    move    #%0010,ccr
    scc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0011; scc dn'
    move    #%0011,ccr
    scc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0100; scc dn'
    move    #%0100,ccr
    scc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0101; scc dn'
    move    #%0101,ccr
    scc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0110; scc dn'
    move    #%0110,ccr
    scc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0111; scc dn'
    move    #%0111,ccr
    scc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1000; scc dn'
    move    #%1000,ccr
    scc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1001; scc dn'
    move    #%1001,ccr
    scc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1010; scc dn'
    move    #%1010,ccr
    scc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1011; scc dn'
    move    #%1011,ccr
    scc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1100; scc dn'
    move    #%1100,ccr
    scc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1101; scc dn'
    move    #%1101,ccr
    scc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1110; scc dn'
    move    #%1110,ccr
    scc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1111; scc dn'
    move    #%1111,ccr
    scc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0000; scs dn'
    move    #%0000,ccr
    scs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0001; scs dn'
    move    #%0001,ccr
    scs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0010; scs dn'
    move    #%0010,ccr
    scs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0011; scs dn'
    move    #%0011,ccr
    scs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0100; scs dn'
    move    #%0100,ccr
    scs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0101; scs dn'
    move    #%0101,ccr
    scs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0110; scs dn'
    move    #%0110,ccr
    scs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0111; scs dn'
    move    #%0111,ccr
    scs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1000; scs dn'
    move    #%1000,ccr
    scs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1001; scs dn'
    move    #%1001,ccr
    scs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1010; scs dn'
    move    #%1010,ccr
    scs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1011; scs dn'
    move    #%1011,ccr
    scs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1100; scs dn'
    move    #%1100,ccr
    scs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1101; scs dn'
    move    #%1101,ccr
    scs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1110; scs dn'
    move    #%1110,ccr
    scs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1111; scs dn'
    move    #%1111,ccr
    scs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0000; sne dn'
    move    #%0000,ccr
    sne     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0001; sne dn'
    move    #%0001,ccr
    sne     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0010; sne dn'
    move    #%0010,ccr
    sne     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0011; sne dn'
    move    #%0011,ccr
    sne     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0100; sne dn'
    move    #%0100,ccr
    sne     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0101; sne dn'
    move    #%0101,ccr
    sne     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0110; sne dn'
    move    #%0110,ccr
    sne     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0111; sne dn'
    move    #%0111,ccr
    sne     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1000; sne dn'
    move    #%1000,ccr
    sne     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1001; sne dn'
    move    #%1001,ccr
    sne     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1010; sne dn'
    move    #%1010,ccr
    sne     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1011; sne dn'
    move    #%1011,ccr
    sne     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1100; sne dn'
    move    #%1100,ccr
    sne     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1101; sne dn'
    move    #%1101,ccr
    sne     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1110; sne dn'
    move    #%1110,ccr
    sne     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1111; sne dn'
    move    #%1111,ccr
    sne     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0000; seq dn'
    move    #%0000,ccr
    seq     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0001; seq dn'
    move    #%0001,ccr
    seq     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0010; seq dn'
    move    #%0010,ccr
    seq     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0011; seq dn'
    move    #%0011,ccr
    seq     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0100; seq dn'
    move    #%0100,ccr
    seq     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0101; seq dn'
    move    #%0101,ccr
    seq     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0110; seq dn'
    move    #%0110,ccr
    seq     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0111; seq dn'
    move    #%0111,ccr
    seq     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1000; seq dn'
    move    #%1000,ccr
    seq     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1001; seq dn'
    move    #%1001,ccr
    seq     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1010; seq dn'
    move    #%1010,ccr
    seq     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1011; seq dn'
    move    #%1011,ccr
    seq     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1100; seq dn'
    move    #%1100,ccr
    seq     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1101; seq dn'
    move    #%1101,ccr
    seq     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1110; seq dn'
    move    #%1110,ccr
    seq     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1111; seq dn'
    move    #%1111,ccr
    seq     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0000; svc dn'
    move    #%0000,ccr
    svc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0001; svc dn'
    move    #%0001,ccr
    svc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0010; svc dn'
    move    #%0010,ccr
    svc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0011; svc dn'
    move    #%0011,ccr
    svc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0100; svc dn'
    move    #%0100,ccr
    svc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0101; svc dn'
    move    #%0101,ccr
    svc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0110; svc dn'
    move    #%0110,ccr
    svc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0111; svc dn'
    move    #%0111,ccr
    svc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1000; svc dn'
    move    #%1000,ccr
    svc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1001; svc dn'
    move    #%1001,ccr
    svc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1010; svc dn'
    move    #%1010,ccr
    svc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1011; svc dn'
    move    #%1011,ccr
    svc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1100; svc dn'
    move    #%1100,ccr
    svc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1101; svc dn'
    move    #%1101,ccr
    svc     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1110; svc dn'
    move    #%1110,ccr
    svc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1111; svc dn'
    move    #%1111,ccr
    svc     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0000; svs dn'
    move    #%0000,ccr
    svs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0001; svs dn'
    move    #%0001,ccr
    svs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0010; svs dn'
    move    #%0010,ccr
    svs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0011; svs dn'
    move    #%0011,ccr
    svs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0100; svs dn'
    move    #%0100,ccr
    svs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0101; svs dn'
    move    #%0101,ccr
    svs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0110; svs dn'
    move    #%0110,ccr
    svs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0111; svs dn'
    move    #%0111,ccr
    svs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1000; svs dn'
    move    #%1000,ccr
    svs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1001; svs dn'
    move    #%1001,ccr
    svs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1010; svs dn'
    move    #%1010,ccr
    svs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1011; svs dn'
    move    #%1011,ccr
    svs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1100; svs dn'
    move    #%1100,ccr
    svs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1101; svs dn'
    move    #%1101,ccr
    svs     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1110; svs dn'
    move    #%1110,ccr
    svs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1111; svs dn'
    move    #%1111,ccr
    svs     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0000; spl dn'
    move    #%0000,ccr
    spl     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0001; spl dn'
    move    #%0001,ccr
    spl     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0010; spl dn'
    move    #%0010,ccr
    spl     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0011; spl dn'
    move    #%0011,ccr
    spl     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0100; spl dn'
    move    #%0100,ccr
    spl     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0101; spl dn'
    move    #%0101,ccr
    spl     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0110; spl dn'
    move    #%0110,ccr
    spl     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0111; spl dn'
    move    #%0111,ccr
    spl     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1000; spl dn'
    move    #%1000,ccr
    spl     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1001; spl dn'
    move    #%1001,ccr
    spl     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1010; spl dn'
    move    #%1010,ccr
    spl     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1011; spl dn'
    move    #%1011,ccr
    spl     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1100; spl dn'
    move    #%1100,ccr
    spl     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1101; spl dn'
    move    #%1101,ccr
    spl     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1110; spl dn'
    move    #%1110,ccr
    spl     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1111; spl dn'
    move    #%1111,ccr
    spl     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0000; smi dn'
    move    #%0000,ccr
    smi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0001; smi dn'
    move    #%0001,ccr
    smi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0010; smi dn'
    move    #%0010,ccr
    smi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0011; smi dn'
    move    #%0011,ccr
    smi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0100; smi dn'
    move    #%0100,ccr
    smi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0101; smi dn'
    move    #%0101,ccr
    smi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0110; smi dn'
    move    #%0110,ccr
    smi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0111; smi dn'
    move    #%0111,ccr
    smi     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1000; smi dn'
    move    #%1000,ccr
    smi     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1001; smi dn'
    move    #%1001,ccr
    smi     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1010; smi dn'
    move    #%1010,ccr
    smi     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1011; smi dn'
    move    #%1011,ccr
    smi     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1100; smi dn'
    move    #%1100,ccr
    smi     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1101; smi dn'
    move    #%1101,ccr
    smi     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1110; smi dn'
    move    #%1110,ccr
    smi     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1111; smi dn'
    move    #%1111,ccr
    smi     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0000; sge dn'
    move    #%0000,ccr
    sge     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0001; sge dn'
    move    #%0001,ccr
    sge     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0010; sge dn'
    move    #%0010,ccr
    sge     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0011; sge dn'
    move    #%0011,ccr
    sge     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0100; sge dn'
    move    #%0100,ccr
    sge     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0101; sge dn'
    move    #%0101,ccr
    sge     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0110; sge dn'
    move    #%0110,ccr
    sge     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0111; sge dn'
    move    #%0111,ccr
    sge     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1000; sge dn'
    move    #%1000,ccr
    sge     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1001; sge dn'
    move    #%1001,ccr
    sge     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1010; sge dn'
    move    #%1010,ccr
    sge     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1011; sge dn'
    move    #%1011,ccr
    sge     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1100; sge dn'
    move    #%1100,ccr
    sge     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1101; sge dn'
    move    #%1101,ccr
    sge     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1110; sge dn'
    move    #%1110,ccr
    sge     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1111; sge dn'
    move    #%1111,ccr
    sge     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0000; slt dn'
    move    #%0000,ccr
    slt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0001; slt dn'
    move    #%0001,ccr
    slt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0010; slt dn'
    move    #%0010,ccr
    slt     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0011; slt dn'
    move    #%0011,ccr
    slt     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0100; slt dn'
    move    #%0100,ccr
    slt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0101; slt dn'
    move    #%0101,ccr
    slt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0110; slt dn'
    move    #%0110,ccr
    slt     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0111; slt dn'
    move    #%0111,ccr
    slt     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1000; slt dn'
    move    #%1000,ccr
    slt     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1001; slt dn'
    move    #%1001,ccr
    slt     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1010; slt dn'
    move    #%1010,ccr
    slt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1011; slt dn'
    move    #%1011,ccr
    slt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1100; slt dn'
    move    #%1100,ccr
    slt     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1101; slt dn'
    move    #%1101,ccr
    slt     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1110; slt dn'
    move    #%1110,ccr
    slt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1111; slt dn'
    move    #%1111,ccr
    slt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0000; sgt dn'
    move    #%0000,ccr
    sgt     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0001; sgt dn'
    move    #%0001,ccr
    sgt     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0010; sgt dn'
    move    #%0010,ccr
    sgt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0011; sgt dn'
    move    #%0011,ccr
    sgt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0100; sgt dn'
    move    #%0100,ccr
    sgt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0101; sgt dn'
    move    #%0101,ccr
    sgt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0110; sgt dn'
    move    #%0110,ccr
    sgt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0111; sgt dn'
    move    #%0111,ccr
    sgt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1000; sgt dn'
    move    #%1000,ccr
    sgt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1001; sgt dn'
    move    #%1001,ccr
    sgt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1010; sgt dn'
    move    #%1010,ccr
    sgt     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1011; sgt dn'
    move    #%1011,ccr
    sgt     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1100; sgt dn'
    move    #%1100,ccr
    sgt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1101; sgt dn'
    move    #%1101,ccr
    sgt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1110; sgt dn'
    move    #%1110,ccr
    sgt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1111; sgt dn'
    move    #%1111,ccr
    sgt     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0000; sle dn'
    move    #%0000,ccr
    sle     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0001; sle dn'
    move    #%0001,ccr
    sle     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=0010; sle dn'
    move    #%0010,ccr
    sle     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0011; sle dn'
    move    #%0011,ccr
    sle     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0100; sle dn'
    move    #%0100,ccr
    sle     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0101; sle dn'
    move    #%0101,ccr
    sle     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0110; sle dn'
    move    #%0110,ccr
    sle     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=0111; sle dn'
    move    #%0111,ccr
    sle     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1000; sle dn'
    move    #%1000,ccr
    sle     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1001; sle dn'
    move    #%1001,ccr
    sle     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1010; sle dn'
    move    #%1010,ccr
    sle     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1011; sle dn'
    move    #%1011,ccr
    sle     d0
    tst.b   d0
    z1
    EndOfTest

    StartOfTest 'nxvc=1100; sle dn'
    move    #%1100,ccr
    sle     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1101; sle dn'
    move    #%1101,ccr
    sle     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1110; sle dn'
    move    #%1110,ccr
    sle     d0
    tst.b   d0
    z0
    EndOfTest

    StartOfTest 'nxvc=1111; sle dn'
    move    #%1111,ccr
    sle     d0
    tst.b   d0
    z0

    EndOfTest

    StartOfTest 'sub dn,dn f1cb-5315'
    move.w  #$5315,d1
    move.w  #$f1cb,d2
    sub.w   d1,d2
    n1
    z0
    v0
    c0
    x0
    cmp.w   #$9eb6,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn 7906-4df6'
    move.w  #$4df6,d1
    move.w  #$7906,d2
    sub.w   d1,d2
    n0
    z0
    v0
    c0
    x0
    cmp.w   #$2b10,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn 2eca-bd4b'
    move.w  #$bd4b,d1
    move.w  #$2eca,d2
    sub.w   d1,d2
    n0
    z0
    v0
    c1
    x1
    cmp.w   #$717f,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn 4c8c-a273'
    move.w  #$a273,d1
    move.w  #$4c8c,d2
    sub.w   d1,d2
    n1
    z0
    v1
    c1
    x1
    cmp.w   #$aa19,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn 03ab-0974'
    move.w  #$0974,d1
    move.w  #$03ab,d2
    sub.w   d1,d2
    n1
    z0
    v0
    c1
    x1
    cmp.w   #$fa37,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn 2484-3e19'
    move.w  #$3e19,d1
    move.w  #$2484,d2
    sub.w   d1,d2
    n1
    z0
    v0
    c1
    x1
    cmp.w   #$e66b,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn b38b-e062'
    move.w  #$e062,d1
    move.w  #$b38b,d2
    sub.w   d1,d2
    n1
    z0
    v0
    c1
    x1
    cmp.w   #$d329,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn bf4b-f4f2'
    move.w  #$f4f2,d1
    move.w  #$bf4b,d2
    sub.w   d1,d2
    n1
    z0
    v0
    c1
    x1
    cmp.w   #$ca59,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn 98ea-13d7'
    move.w  #$13d7,d1
    move.w  #$98ea,d2
    sub.w   d1,d2
    n1
    z0
    v0
    c0
    x0
    cmp.w   #$8513,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn d2ab-9355'
    move.w  #$9355,d1
    move.w  #$d2ab,d2
    sub.w   d1,d2
    n0
    z0
    v0
    c0
    x0
    cmp.w   #$3f56,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn 1db7-a626'
    move.w  #$a626,d1
    move.w  #$1db7,d2
    sub.w   d1,d2
    n0
    z0
    v0
    c1
    x1
    cmp.w   #$7791,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn becc-27dd'
    move.w  #$27dd,d1
    move.w  #$becc,d2
    sub.w   d1,d2
    n1
    z0
    v0
    c0
    x0
    cmp.w   #$96ef,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn f516-8a38'
    move.w  #$8a38,d1
    move.w  #$f516,d2
    sub.w   d1,d2
    n0
    z0
    v0
    c0
    x0
    cmp.w   #$6ade,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn 61a2-10c6'
    move.w  #$10c6,d1
    move.w  #$61a2,d2
    sub.w   d1,d2
    n0
    z0
    v0
    c0
    x0
    cmp.w   #$50dc,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn 3cab-f18b'
    move.w  #$f18b,d1
    move.w  #$3cab,d2
    sub.w   d1,d2
    n0
    z0
    v0
    c1
    x1
    cmp.w   #$4b20,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn f382-f9d5'
    move.w  #$f9d5,d1
    move.w  #$f382,d2
    sub.w   d1,d2
    n1
    z0
    v0
    c1
    x1
    cmp.w   #$f9ad,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn 29b7-f005'
    move.w  #$f005,d1
    move.w  #$29b7,d2
    sub.w   d1,d2
    n0
    z0
    v0
    c1
    x1
    cmp.w   #$39b2,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn d4dc-56e3'
    move.w  #$56e3,d1
    move.w  #$d4dc,d2
    sub.w   d1,d2
    n0
    z0
    v1
    c0
    x0
    cmp.w   #$7df9,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn 8816-305f'
    move.w  #$305f,d1
    move.w  #$8816,d2
    sub.w   d1,d2
    n0
    z0
    v1
    c0
    x0
    cmp.w   #$57b7,d2
    z1
    EndOfTest

    StartOfTest 'sub dn,dn 548d-463e'
    move.w  #$463e,d1
    move.w  #$548d,d2
    sub.w   d1,d2
    n0
    z0
    v0
    c0
    x0
    cmp.w   #$0e4f,d2
    z1
    EndOfTest

    StartOfTest 'suba.w #imm,an'
    move    #$13,ccr
    move.l  #0,a0
    suba.w  #$10,a0
    move    sr,d0
    cmp.b   #$13,d0
    z1
    cmp.l   #$fffffff0,a0
    z1

    EndOfTest

    StartOfTest 'suba.l #imm,an'
    move    #$13,ccr
    move.l  #$10000000,a0
    suba.l  #$0fffffff,a0
    move    sr,d0
    cmp.b   #$13,d0
    z1
    cmp.l   #$1,a0
    z1
    EndOfTest

    StartOfTest 'subi #imm,d0 0-(-0x8000)'
    move.w  #0,d0
    subi    #-$8000,d0
    n1
    z0
    v1
    c1
    x1
    EndOfTest

    StartOfTest 'subi #imm,d0 0-(-0x7fff)'
    move.w  #0,d0
    subi    #-$7fff,d0
    n0
    z0
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'subi #imm,d0 0-(-2)'
    move.w  #0,d0
    subi    #-2,d0
    n0
    z0
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'subi #imm,d0 -1'
    move.w  #0,d0
    subi    #-1,d0
    n0
    z0
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'subi #imm,d0 0-0'
    move.w  #0,d0
    subi    #0,d0
    n0
    z1
    v0
    c0
    x0
    EndOfTest

    StartOfTest 'subi #imm,d0 0-1'
    move.w  #0,d0
    subi    #1,d0
    n1
    z0
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'subi #imm,d0 0-2'
    move.w  #0,d0
    subi    #2,d0
    n1
    z0
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'subi #imm,d0 0-0x7ffe'
    move.w  #0,d0
    subi    #$7ffe,d0
    n1
    z0
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'subi #imm,d0 0-0x7fff'
    move.w  #0,d0
    subi    #$7fff,d0
    n1
    z0
    v0
    c1
    x1
    EndOfTest

    StartOfTest 'subq #imm,abs.w'
    move.l  #$10000000,ApplScratch.w
    subq.l  #1,ApplScratch.w
    cmp.l   #$0fffffff,ApplScratch.w
    z1
    subq.l  #8,ApplScratch.w
    cmp.l   #$0ffffff7,ApplScratch.w
    z1
    EndOfTest

    StartOfTest 'subq #imm,d0 0-1'
    move.w  #0,d0
    subq.w  #1,d0
    n1
    z0
    v0
    c1
    x1
    cmp.w   #-1,d0
    z1
    EndOfTest

    StartOfTest 'subq #imm,d0 0-8'
    move.w  #0,d0
    subq.w  #8,d0
    n1
    z0
    v0
    c1
    x1
    cmp.w   #-8,d0
    z1
    EndOfTest

    StartOfTest 'subx dn,dn'
    move    #$10,ccr ; set x bit
    move.w  #$10,d3
    move.w  #$10,d4
    subx.w  d3,d4
    n1
    z0
    v0
    c1
    x1
    cmp.w   #$ffff,d4
    z1
    EndOfTest

    StartOfTest 'subx -(an),-(an)'
    lea     -10(a5),a0
    lea     -20(a5),a1
    move.l  #$31a959af,(a0)+
    move.l  #$25e3dfcc,(a1)+
    move    #$00,ccr ; clear x bit
    subx.b  -(a0),-(a1)
    subx.b  -(a0),-(a1)
    subx.b  -(a0),-(a1)
    subx.b  -(a0),-(a1)
    x1
    cmp.l   #$f43a861d,(a1)
    z1
    EndOfTest

    StartOfTest 'swap dn'
    move.l  #$fffe0002,d3
    swap    d3
    n0
    z0
    v0
    c0
    cmp.l   #$0002fffe,d3
    z1
    EndOfTest

    StartOfTest 'swap dn'
    move.l  #$fffe0002,d3
    swap    d3
    n0
    z0
    v0
    c0
    cmp.l   #$0002fffe,d3
    z1
    EndOfTest

    StartOfTest 'tas abs.w'
    clr.b   ApplScratch.w
    tas     ApplScratch.w
    n0
    z1
    tas     ApplScratch.w
    n1
    z0
    EndOfTest

    StartOfTest 'tas abs.w'
    clr.b   ApplScratch.w
    tas     ApplScratch.w
    n0
    z1
    tas     ApplScratch.w
    n1
    z0
    EndOfTest

    StartOfTest 'tst abs.w'
    move.b  #$00,ApplScratch.w
    tst.b   ApplScratch.w
    n0
    z1
    v0
    c0
    move.b  #$01,ApplScratch.w
    tst.b   ApplScratch.w
    n0
    z0
    v0
    c0
    move.b  #$ff,ApplScratch.w
    tst.b   ApplScratch.w
    n1
    z0
    v0
    c0
    EndOfTest

    StartOfTest 'unlk an'
    move.w  #$7777,-(sp)
    move.l  #$e7701111,-(sp)
    move.l  sp,a6
    sub.w   #20,sp
    unlk    a6
    cmp.l   #$e7701111,a6
    z1
    cmpi    #$7777,(sp)+
    z1
    EndOfTest

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Useful: prints data regs
;    PushStr 'python: print(mem[regs:][:32].hex())'
;    bsrLong PrintStrFunc


    PrintPlan
    rts
