    include 'Header.a'

_1991_01_02 equ $a3a6d300

	StartOfTest 'IUDatePString short'
	bsr		FreshResources

	move.l	#_1991_01_02,-(sp)
	move.b	#0,-(sp) ; short form
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '1/2/91'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString short DMY'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	move.b	#1,7(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#0,-(sp) ; short form
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '2/1/91'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString short YMD'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	move.b	#2,7(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#0,-(sp) ; short form
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '91/1/2'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString short MYD'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	move.b	#3,7(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#0,-(sp) ; short form
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '1/91/2'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString short DYM'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	move.b	#4,7(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#0,-(sp) ; short form
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '2/91/1'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString short YDM'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	move.b	#5,7(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#0,-(sp) ; short form
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '91/2/1'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString short with century'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	or.b	#$80,8(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#0,-(sp) ; short form
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '1/2/1991'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString short with 2-digit month'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	or.b	#$40,8(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#0,-(sp) ; short form
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '01/2/91'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString short with 2-digit day'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	or.b	#$20,8(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#0,-(sp) ; short form
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '1/02/91'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString short with custom separator'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	move.b	#'-',9(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#0,-(sp) ; short form
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '1-2-91'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString long Saturday'
	bsr		FreshResources

	move.l	#_1991_01_02+3*24*60*60,-(sp)
	move.b	#1,-(sp) ; long form
	pea		StringArea
	move.l	INTL1Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr 'Saturday, January 5, 1991'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString long Sunday'
	bsr		FreshResources

	move.l	#_1991_01_02+4*24*60*60,-(sp)
	move.b	#1,-(sp) ; long form
	pea		StringArea
	move.l	INTL1Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr 'Sunday, January 6, 1991'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString long Monday'
	bsr		FreshResources

	move.l	#_1991_01_02+5*24*60*60,-(sp)
	move.b	#1,-(sp) ; long form
	pea		StringArea
	move.l	INTL1Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr 'Monday, January 7, 1991'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString long December'
	bsr		FreshResources

	move.l	#_1991_01_02+360*24*60*60,-(sp)
	move.b	#1,-(sp) ; long form
	pea		StringArea
	move.l	INTL1Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr 'Saturday, December 28, 1991'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString long 0/WDMY with custom separator'
	bsr		FreshResources
	move.l	INTL1Ptr,a0
	move.b	#0,305(a0)
	move.l	#'(1.)',308(a0)
	move.l	#'(2.)',312(a0)
	move.l	#'(3.)',316(a0)
	move.l	#'(4.)',320(a0)
	move.l	#'(5.)',324(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#1,-(sp) ; long form
	pea		StringArea
	move.l	INTL1Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '(1.)Wednesday(2.)2(3.)January(4.)1991(5.)'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString long MWYD with custom separator'
	bsr		FreshResources
	move.l	INTL1Ptr,a0
	move.b	#$b6,305(a0)
	move.l	#'(1.)',308(a0)
	move.l	#'(2.)',312(a0)
	move.l	#'(3.)',316(a0)
	move.l	#'(4.)',320(a0)
	move.l	#'(5.)',324(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#1,-(sp) ; long form
	pea		StringArea
	move.l	INTL1Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '(1.)January(2.)Wednesday(3.)1991(4.)January(5.)'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString long MWYD with custom separator and M suppressed'
	bsr		FreshResources
	move.l	INTL1Ptr,a0
	or.b	#4,304(a0)
	move.b	#$b6,305(a0)
	move.l	#'(1.)',308(a0)
	move.l	#'(2.)',312(a0)
	move.l	#'(3.)',316(a0)
	move.l	#'(4.)',320(a0)
	move.l	#'(5.)',324(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#1,-(sp) ; long form
	pea		StringArea
	move.l	INTL1Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '(1.)Wednesday(3.)1991(4.)'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString long MWYD with custom separator and Y suppressed'
	bsr		FreshResources
	move.l	INTL1Ptr,a0
	or.b	#8,304(a0)
	move.b	#$b6,305(a0)
	move.l	#'(1.)',308(a0)
	move.l	#'(2.)',312(a0)
	move.l	#'(3.)',316(a0)
	move.l	#'(4.)',320(a0)
	move.l	#'(5.)',324(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#1,-(sp) ; long form
	pea		StringArea
	move.l	INTL1Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '(1.)January(2.)Wednesday(3.)January(5.)'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString long with 2-digit day'
	bsr		FreshResources
	move.l	INTL1Ptr,a0
	move.b	#1,306(a0)

	move.l	#_1991_01_02+3*24*60*60,-(sp)
	move.b	#1,-(sp) ; long form
	pea		StringArea
	move.l	INTL1Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr 'Saturday, January 05, 1991'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUDatePString long abbreviated'
	bsr		FreshResources
	move.l	INTL1Ptr,a0
	move.b	#4,307(a0) ; non-standard abbrev length

	move.l	#_1991_01_02+3*24*60*60,-(sp)
	move.b	#2,-(sp) ; abbrev form
	pea		StringArea
	move.l	INTL1Hand,-(sp)

	move.w	#14,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr 'Satu, Janu 5, 1991'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUTimePString 11:59:59 PM'
	bsr		FreshResources

	move.l	#_1991_01_02-1,-(sp)
	move.b	#1,-(sp) ; wantSeconds
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#16,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '11:59:59 PM'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUTimePString 12:00:00 AM'
	bsr		FreshResources

	move.l	#_1991_01_02,-(sp)
	move.b	#1,-(sp) ; wantSeconds
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#16,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '12:00:00 AM'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUTimePString 12:00:01 AM'
	bsr		FreshResources

	move.l	#_1991_01_02+1,-(sp)
	move.b	#1,-(sp) ; wantSeconds
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#16,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '12:00:01 AM'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUTimePString 11:59:59 PM timeCycleZero'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	move.b	#1,10(a0)

	move.l	#_1991_01_02-1,-(sp)
	move.b	#1,-(sp) ; wantSeconds
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#16,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '11:59:59 PM'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUTimePString 0:00:00 AM timeCycleZero'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	move.b	#1,10(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#1,-(sp) ; wantSeconds
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#16,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '0:00:00 AM'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUTimePString 0:00:01 AM timeCycleZero'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	move.b	#1,10(a0)

	move.l	#_1991_01_02+1,-(sp)
	move.b	#1,-(sp) ; wantSeconds
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#16,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '0:00:01 AM'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUTimePString 23:59:59x timeCycle24'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	move.b	#0,10(a0)
	move.b	#'x',21+4(a0)

	move.l	#_1991_01_02-1,-(sp)
	move.b	#1,-(sp) ; wantSeconds
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#16,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '23:59:59x'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUTimePString 0:00:00 timeCycle24'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	move.b	#0,10(a0)
	move.b	#'x',21(a0)

	move.l	#_1991_01_02,-(sp)
	move.b	#1,-(sp) ; wantSeconds
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#16,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '0:00:00x'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUTimePString 0:00:01 timeCycle24'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	move.b	#0,10(a0)
	move.b	#'x',21(a0)

	move.l	#_1991_01_02+1,-(sp)
	move.b	#1,-(sp) ; wantSeconds
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#16,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '0:00:01x'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUTimePString 12:00 AM'
	bsr		FreshResources

	move.l	#_1991_01_02+1,-(sp)
	move.b	#0,-(sp) ; wantSeconds
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#16,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '12:00 AM'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUTimePString 01:01:01 AM'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	bset	#7,11(a0)

	move.l	#_1991_01_02+60*60+60+1,-(sp)
	move.b	#1,-(sp) ; wantSeconds
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#16,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '01:01:01 AM'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUTimePString 1:1:01 AM'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	bclr	#6,11(a0)

	move.l	#_1991_01_02+60*60+60+1,-(sp)
	move.b	#1,-(sp) ; wantSeconds
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#16,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '1:1:01 AM'
	bsr		Compare
	EndOfTest


	StartOfTest 'IUTimePString 1:01:1 AM'
	bsr		FreshResources
	move.l	INTL0Ptr,a0
	bclr	#5,11(a0)

	move.l	#_1991_01_02+60*60+60+1,-(sp)
	move.b	#1,-(sp) ; wantSeconds
	pea		StringArea
	move.l	INTL0Hand,-(sp)

	move.w	#16,-(sp) ; IUDatePString(secs, form, ptr, itlhand)
	dc.w	$a9ed

	pea		StringArea
	PushStr '1:01:1 AM'
	bsr		Compare
	EndOfTest


	PrintPlan
    rts


FreshResources ; create new international resources complete with handles etc
	move.l	#INTL0TemplateEnd-INTL0Template,d0
	dc.w	$a122 ; NewHandle
	move.l	a0,d3
	move.l	(a0),a1
	lea		INTL0Template,a0
	move.l	#INTL0TemplateEnd-INTL0Template,d0
	dc.w	$a02e ; BlockMove
	lea		INTL0Hand,a0
	move.l	d3,(a0)+
	move.l	a1,(a0)

	move.l	#INTL1TemplateEnd-INTL1Template,d0
	dc.w	$a122 ; NewHandle
	move.l	a0,d3
	move.l	(a0),a1
	lea		INTL1Template,a0
	move.l	#INTL1TemplateEnd-INTL1Template,d0
	dc.w	$a02e ; BlockMove
	lea		INTL1Hand,a0
	move.l	d3,(a0)+
	move.l	a1,(a0)

	rts

StringArea
	dcb.b	256

INTL0Hand
	dc.l 0
INTL0Ptr
	dc.l 0

INTL1Hand
	dc.l 0
INTL1Ptr
	dc.l 0

INTL0Template
	dc.b	$2e, $2c, $3b, $24, $00, $00, $d0, $00, $00, $2f, $ff, $60, $20, $41, $4d, $00
	dc.b	$20, $50, $4d, $00, $3a, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $01
INTL0TemplateEnd

INTL1Template
	dc.b	$06, $53, $75, $6e, $64, $61, $79, $00, $00, $00, $00, $00, $00, $00, $00, $00
	dc.b	$06, $4d, $6f, $6e, $64, $61, $79, $00, $00, $00, $00, $00, $00, $00, $00, $00
	dc.b	$07, $54, $75, $65, $73, $64, $61, $79, $00, $00, $00, $00, $00, $00, $00, $00
	dc.b	$09, $57, $65, $64, $6e, $65, $73, $64, $61, $79, $00, $00, $00, $00, $00, $00
	dc.b	$08, $54, $68, $75, $72, $73, $64, $61, $79, $00, $00, $00, $00, $00, $00, $00
	dc.b	$06, $46, $72, $69, $64, $61, $79, $00, $00, $00, $00, $00, $00, $00, $00, $00
	dc.b	$08, $53, $61, $74, $75, $72, $64, $61, $79, $00, $00, $00, $00, $00, $00, $00
	dc.b	$07, $4a, $61, $6e, $75, $61, $72, $79, $00, $00, $00, $00, $00, $00, $00, $00
	dc.b	$08, $46, $65, $62, $72, $75, $61, $72, $79, $00, $00, $00, $00, $00, $00, $00
	dc.b	$05, $4d, $61, $72, $63, $68, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	dc.b	$05, $41, $70, $72, $69, $6c, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	dc.b	$03, $4d, $61, $79, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	dc.b	$04, $4a, $75, $6e, $65, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	dc.b	$04, $4a, $75, $6c, $79, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	dc.b	$06, $41, $75, $67, $75, $73, $74, $00, $00, $00, $00, $00, $00, $00, $00, $00
	dc.b	$09, $53, $65, $70, $74, $65, $6d, $62, $65, $72, $00, $00, $00, $00, $00, $00
	dc.b	$07, $4f, $63, $74, $6f, $62, $65, $72, $00, $00, $00, $00, $00, $00, $00, $00
	dc.b	$08, $4e, $6f, $76, $65, $6d, $62, $65, $72, $00, $00, $00, $00, $00, $00, $00
	dc.b	$08, $44, $65, $63, $65, $6d, $62, $65, $72, $00, $00, $00, $00, $00, $00, $00
	dc.b	$00, $ff, $00, $03, $00, $00, $00, $00, $2c, $20, $00, $00, $20, $00, $00, $00
	dc.b	$2c, $20, $00, $00, $00, $00, $00, $00, $00, $01, $4e, $75
INTL1TemplateEnd
