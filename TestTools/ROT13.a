; MPW tool
; en.wikipedia.org/wiki/ROT13

    link    a6,#0
    movem.l d3-d7/a2-a4,-(sp)
    clr.w   -(sp) ; teensy buffer

    move.l  $316.w,a3
    move.l  4(a3),a3
    move.l  $1c(a3),a3 ; a3 -> stdin file struct
    lea     20(a3),a4 ; a4 -> stdout file struct

next
    move.l  #1,12(a3) ; buffer size
    move.l  sp,16(a3) ; buffer location
    move.l  4(a3),a0 ; table of function pointers
    move.l  12(a0),a0 ; a0 points to read func ptr
    move.l  a3,-(sp) ; pass it a ptr
    jsr     (a0)
    addq    #4,sp

    tst.l   12(a3) ; check for unread chars
    bne.s   exit

    move.b  (sp),d0
    and.b   #$c0,d0
    cmp.b   #$40,d0
    bne.s   passthru
    ; now we know the char is 64-127
    move.b  (sp),d0
    and.b   #$1f,d0
    beq.s   passthru
    cmp.b   #14,d0
    blt.s   lowerhalf
    cmp.b   #27,d0
    blt.s   upperhalf
    bra.s   passthru

lowerhalf
    add.b   #13,(sp)
    bra.s   passthru

upperhalf
    sub.b   #13,(sp)

passthru
    move.l  #1,12(a4) ; buffer size
    move.l  sp,16(a4) ; buffer location
    move.l  4(a4),a0 ; table of function pointers
    move.l  16(a0),a0 ; a0 points to write func ptr
    move.l  a4,-(sp) ; pass it a ptr
    jsr     (a0)
    addq    #4,sp

    bra.s   next

exit
    addq    #2,sp ; release the buffer
    movem.l (sp)+,d3-d7/a2-a4
    unlk    a6
    rts

    dc.b    $85, 'ROT13'
