Startup, Etc. -  Startup, Suspend, Resume and Quit Examples


Copyright Apple Computer, Inc. 1987, 1995
All rights reserved.


This file contains a number of ideas for modifying the Startup,
Suspend, Resume, and Quit scripts.

Startup			-	executed when starting the MPW Shell
UserStartup		-	executed from Startup
Suspend			-	executed before running an application (no MultiFinder)
Resume			-	executed on return from an application (no MultiFinder)
Quit			-	executed before quitting the MPW Shell


Relocating the MPW Folder

	Normally MPW is installed in a folder called MPW on the boot disk.
	It's important for the MPW system to know the location of this folder,
	so that the tools, scripts, libraries, include files, etc. that make
	up MPW can be easily located.  You can change the name of the MPW
	folder, or move it to another disk or directory, without making
	any changes in the Startup file, as long as you keep the MPW Shell
	in the same folder.

	Variable {MPW}, defined in the Startup file, specifies the folder
	that contains the MPW system.  The following line in the Startup
	file specifies the default location:

		Set MPW "{ShellDirectory}"

	This defines the location of the MPW sytem to be in the directory
	containing the MPW Shell program.  If you keep your MPW Shell 
	on the desktop, you should define MPW to be the full path name of
	the directory containing the rest of the MPW system, for example:

		Set MPW "{Boot}MPW"


Saving Window Contents

	When you run an application or quit, the shell displays "Save Changes"
	dialogs for each modified window, to ask if you want to save the
	changes.  These dialogs can be avoided by explicitly saving any or
	all of the windows in the Suspend and Quit scripts.

	Add either of these lines at the end of Suspend and Quit:

		Save "{Worksheet}"	# Save the worksheet (the default)
		Save -a				# Save all windows

	Alternately, you can use the SaveOnClose built-in command for a
	particular window.  You can learn more about SaveOnClose from the
	MPW Command Reference, or by executing:
	
		Help SaveOnClose ∑∑"{Worksheet}"


Multiple UserStartup Scripts

	You may have multiple user startup scripts.  Any script in the
	{MPW}Startup Items: folder will be executed from Startup after
	executing UserStartup.
	
	You can also set up your system to run a different UserStartup
	depending on the directory from which you start MPW.  To do this
	you will need to change one line of the Startup script, and put
	a UserStartup script in the different directories containing
	the files that you usually open from the Finder.  In the Startup
	script change:

			Execute "{ShellDirectory}UserStartup"
	to:
			Execute UserStartup
	
	When you start the MPW Shell by opening a document in the Finder, 
	the directory of that document is your default directory.  
	The UserStartup in that directory will then be executed rather
	than the default UserStartup.
			

State Saving

	The State script writes the current variable definitions, exports,
	aliases, and menu items, the default directory, and the list of open
	windows to standard output.  This state information is written in the
	form of commands that may be used later to restore the state.  The date
	is included in the first line of output.

	To see the State script, execute the following:

		Open "{MPW}"Examples:State

	Important:	In order to use the State script, you must move it to a
	directory in which the shell looks for commands.

		Duplicate "{MPW}"Examples:State "{MPW}"Scripts:

	To save the state information in a file, execute a command such as

		State > XYZ.Startup1

	The state can then be restored by executing the following:

		Unset
		Unexport
		Unalias
		DeleteMenu
		Close -a
		Execute XYZ.Startup1

	Moreover, the state can be restored after leaving the shell by
	double-clicking on the XYZ.Startup1 file.  (See the Double-clickable
	Scripts example above.)



Crashes in Applications

	When you crash in an application run from the MPW Shell (something
	that just might happen during debugging) you're forced to restart
	the shell, loosing your variables, aliases, open windows, etc.

	With a few changes to the Suspend and Resume scripts, and the double-
	clickable scripts changes above, you can double-click on the file
	written by Suspend to pick up where you left off after a crash in
	an application.

	Replace the Begin … End statement in Suspend with the following:

		State > "{ShellDirectory}"Suspend.Startup1

	Replace the Execute and Delete commands in Resume with the following:

		 Execute "{ShellDirectory}"Suspend.Startup1
		 Delete  "{ShellDirectory}"Suspend.Startup1

	These changes simply change the name of the file in which Suspend
	saves the state information, so that it ends with the .Startup1 suffix.
	This suffix indicates a double-clickable script that replaced Startup.



Suspend/Resume

	Introduction
	ŸŸŸŸŸŸŸŸŸŸŸŸ
	The Suspend script may be used to save the state of MPW so that it can
	be restored quickly by the Resume script. They were originally used in
	the dark ages of the Mac (pre-MultiFinder) when an application
	(presumably the one being developed) was launched by the MPW Shell. The
	shell was written so that the Suspend script was automatically executed
	as the shell quit (to launch the application). When the application
	quit, the shell would be automatically launched by the system. The
	shell would recognize that it was being relaunched, and automatically
	execute the Resume script. Now, with System 7 and its built-in multi-
	process support, the shell no longer shuts down when an application is
	launched. Therefore, these two scripts were removed from the product.

	The scripts are still useful, though. It is possible to make some minor
	modifications to the standard scripts supplied with MPW to have the
	Suspend script executed when the shell is terminated, and to have the
	Resume script executed when the shell is launched, bypassing most of
	the Startup script and all of the various UserStartup scripts. This
	improves the shell's startup time, at the expense of flexibility and
	maintainability.

	Theory of Operation
	ŸŸŸŸŸŸŸŸŸŸŸŸŸŸŸŸŸŸŸ
	The Suspend script simply writes the "state" of the MPW environment to
	a file named MPW.SuspendState in the {PrefsFolder}. The "state" is
	defined as those volatile settings of the environment that can be
	changed by the user. This includes variables (value and export state),
	aliases, key settings, user-defined menus, current directory, open
	windows, and projector state. (You may wish to disable the saving of
	the Projector state - restoring it can be a time-consuming process at
	MPW startup time.) Variables which are dynamically maintained and/or
	set by the MPW Shell are explicitly excluded from the saved state, so
	that their settings at startup time can be set normally and
	automatically by the shell.
	
	The Resume script simply executes the MPW.SuspendState file produced by
	the Suspend script, and then explicitly Exports those variables which
	are dynamically maintained and/or set by the MPW Shell.
	
	Usage Tips
	ŸŸŸŸŸŸŸŸŸŸ
	Modify your MPW Startup script by inserting the following lines at the
	beginning:
	
	if `exists "{PrefsFolder}MPW.SuspendState"`
		Execute "{ShellDirectory}Scripts:Resume"
		Exit 0
	end
	
	The Startup script is run automatically by the MPW Shell as the second
	stage of the startup process. (The first stage is Toolbox, memory, OS,
	etc. initialization.) With these lines at the beginning of the startup
	script, the shell will use the saved state to restore the environment
	instead of using the normal startup script sequence. If you ever wish
	to allow the normal sequence to execute (for example, if you have
	modified one of your custom startup scripts in the "Startup Items"
	folder, or installed a new one), simply delete the MPW.SuspendState
	file from your MPW preferences folder prior to launching MPW.
	
	Next, move the SuspendAtQuit script to your {MPW}Quit Items:
	directory. This script will be executed by the main Quit script when
	you Quit from MPW.  This will run the Suspend script, which will save
	the MPW environment settings into the MPW.SuspendState file.  (The ""
	in the name is important to ensure that this Quit script is executed
	last.)
	
	If you wish, you may want to set a user-defined key setting to run the
	Suspend script.  For example, you can set up a key setting like this:
	
	SetKey Control-Escape Suspend
	
	This will allow you to save the MPW environment at any time.  This is
	useful if you manually adjust the environment and wish to save it
	before the machine crashes.
	
	Limitations
	ŸŸŸŸŸŸŸŸŸŸŸ
	Since these scripts override the normal MPW startup process, any
	custom startup scripts installed in the "Startup Items" folder after
	you start to use the Suspend/Resume scripts will not be executed,
	unless you delete the MPW.SuspendState file prior to launching MPW
	(as documented in a previous paragraph).  After installing a new
	custom starutp script, you may wish to simply "Execute" it so that any
	changes made by the script will be immediately installed into your MPW
	environment. Then, you should run the Suspend script to save any
	changes made.
