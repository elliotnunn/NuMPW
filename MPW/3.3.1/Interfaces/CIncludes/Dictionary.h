/*
	File:		Dictionary.h

	Copyright:	Â© 1984-1993 by Apple Computer, Inc., all rights reserved.

	WARNING
	This file was auto generated by the interfacer tool. Modifications
	must be made to the master file.

*/

#ifndef __DICTIONARY__
#define __DICTIONARY__

#ifndef __TYPES__
#include <Types.h>
/*	#include <ConditionalMacros.h>								*/
/*	#include <MixedMode.h>										*/
/*		#include <Traps.h>										*/
#endif

#ifndef __FILES__
#include <Files.h>
/*	#include <OSUtils.h>										*/
/*	#include <SegLoad.h>										*/
#endif


/*------------------------------------------------------------------------------------------
	Constant definitions.
------------------------------------------------------------------------------------------ */


/* Dictionary data insertion modes. */

enum  {
	kInsert						= 0,							/* Only insert the input entry if there is nothing in the dictionary that matches the key. */
	kReplace					= 1,							/* Only replace the entries which match the key with the input entry. */
	kInsertOrReplace			= 2								/* Insert the entry if there is nothing in the dictionary which matches the key. 
						 * If there is already matched entries, replace the existing matched entries with the input entry. */
};


/* This Was InsertMode */

typedef short DictionaryDataInsertMode;


/* Key attribute constants.		*/

#define kIsCaseSensitive 0x10

#define kIsNotDiacriticalSensitive 0x20


/* Registered attribute type constants.	*/

enum  {
	kNoun						= -1,
	kVerb						= -2,
	kAdjective					= -3,
	kAdverb						= -4
};


/* This Was AttributeType */

typedef signed char DictionaryEntryAttribute;


/* ------------------------------------------------------------------------------------------

	Type definitions.

------------------------------------------------------------------------------------------ */


/* Dictionary information record.	*/

#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct DictionaryInformation {
	FSSpec						dictionaryFSSpec;
	long						numberOfRecords;
	long						currentGarbageSize;
	ScriptCode					script;
	short						maximumKeyLength;
	unsigned char				keyAttributes;
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct DictionaryInformation DictionaryInformation;


/* --------------------------------------------------------------------------------------

	Function ProtoTypes.

-------------------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

extern pascal OSErr InitializeDictionary(FSSpecPtr theFsspecPtr, short maximumKeyLength, unsigned char keyAttributes, ScriptCode script)
 THREEWORDINLINE(0x303C, 0x0500, 0xAA53);
extern pascal OSErr OpenDictionary(FSSpecPtr theFsspecPtr, char accessPermission, long *dictionaryReference)
 THREEWORDINLINE(0x303C, 0x0501, 0xAA53);
extern pascal OSErr CloseDictionary(long dictionaryReference)
 THREEWORDINLINE(0x303C, 0x0202, 0xAA53);
extern pascal OSErr InsertRecordToDictionary(long dictionaryReference, ConstStr255Param key, Handle recordDataHandle, DictionaryDataInsertMode whichMode)
 THREEWORDINLINE(0x303C, 0x0703, 0xAA53);
extern pascal OSErr DeleteRecordFromDictionary(long dictionaryReference, ConstStr255Param key)
 THREEWORDINLINE(0x303C, 0x0404, 0xAA53);
extern pascal OSErr FindRecordInDictionary(long dictionaryReference, ConstStr255Param key, Ptr requestedAttributeTablePointer, Handle recordDataHandle)
 THREEWORDINLINE(0x303C, 0x0805, 0xAA53);
extern pascal OSErr FindRecordByIndexInDictionary(long dictionaryReference, long recordIndex, Ptr requestedAttributeTablePointer, Str255 recordKey, Handle recordDataHandle)
 THREEWORDINLINE(0x303C, 0x0A06, 0xAA53);
extern pascal OSErr GetDictionaryInformation(long dictionaryReference, DictionaryInformation *theDictionaryInformation)
 THREEWORDINLINE(0x303C, 0x0407, 0xAA53);
extern pascal OSErr CompactDictionary(long dictionaryReference)
 THREEWORDINLINE(0x303C, 0x0208, 0xAA53);
#ifdef __cplusplus
}
#endif

#endif

