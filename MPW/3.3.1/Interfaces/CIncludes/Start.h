/*
	File:		Start.h

	Copyright:	Â© 1984-1993 by Apple Computer, Inc., all rights reserved.

	WARNING
	This file was auto generated by the interfacer tool. Modifications
	must be made to the master file.

*/

#ifndef __START__
#define __START__

#ifndef __TYPES__
#include <Types.h>
/*	#include <ConditionalMacros.h>								*/
/*	#include <MixedMode.h>										*/
/*		#include <Traps.h>										*/
#endif

#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct SlotDev {
	char						sdExtDevID;
	char						sdPartition;
	char						sdSlotNum;
	char						sdSRsrcID;
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct SlotDev SlotDev;

#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct SCSIDev {
	char						sdReserved1;
	char						sdReserved2;
	short						sdRefNum;
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct SCSIDev SCSIDev;

#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
union DefStartRec {
	SlotDev						slotDev;
	SCSIDev						scsiDev;
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef union DefStartRec DefStartRec;

typedef DefStartRec *DefStartPtr;

#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct DefVideoRec {
	char						sdSlot;
	char						sdsResource;
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct DefVideoRec DefVideoRec;

typedef DefVideoRec *DefVideoPtr;

#if defined(powerc) || defined (__powerc)
#pragma options align=mac68k
#endif
struct DefOSRec {
	char						sdReserved;
	char						sdOSType;
};
#if defined(powerc) || defined(__powerc)
#pragma options align=reset
#endif

typedef struct DefOSRec DefOSRec;

typedef DefOSRec *DefOSPtr;

#ifdef __cplusplus
extern "C" {
#endif


#if USES68KINLINES
#pragma parameter  GetDefaultStartup(__A0)
#endif
extern pascal void GetDefaultStartup(DefStartPtr paramBlock)
 ONEWORDINLINE(0xA07D);

#if USES68KINLINES
#pragma parameter  SetDefaultStartup(__A0)
#endif
extern pascal void SetDefaultStartup(DefStartPtr paramBlock)
 ONEWORDINLINE(0xA07E);

#if USES68KINLINES
#pragma parameter  GetVideoDefault(__A0)
#endif
extern pascal void GetVideoDefault(DefVideoPtr paramBlock)
 ONEWORDINLINE(0xA080);

#if USES68KINLINES
#pragma parameter  SetVideoDefault(__A0)
#endif
extern pascal void SetVideoDefault(DefVideoPtr paramBlock)
 ONEWORDINLINE(0xA081);

#if USES68KINLINES
#pragma parameter  GetOSDefault(__A0)
#endif
extern pascal void GetOSDefault(DefOSPtr paramBlock)
 ONEWORDINLINE(0xA084);

#if USES68KINLINES
#pragma parameter  SetOSDefault(__A0)
#endif
extern pascal void SetOSDefault(DefOSPtr paramBlock)
 ONEWORDINLINE(0xA083);
extern pascal void SetTimeout(short count);
extern pascal void GetTimeout(short *count);
#ifdef __cplusplus
}
#endif

#endif

