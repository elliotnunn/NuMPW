;------------------------------------------------------------------------------
;
;	PortAsm Simple Example
;
;	Copyright MicroAPL Ltd 1993/4
;
;	File AboutDlg.a	  - Initialization and call back routines for About dialog
;
;------------------------------------------------------------------------------

	CASE	OBJECT
	
	INCLUDE	'Traps.a'
	INCLUDE	'QuickEqu.a'
	INCLUDE	'PAExample.inc'


;*********************************************************************
; ABOUTINIT
;	Init procedure for About dialog
;
;IN:	A0: Pointer to event record
;	A1: Pointer to dialog handler structure
;	A2: Pointer to dialog window
;	D0: Event class & code [Word]
;OUT:
;
		SEG	'Initialize'
AboutInit:	PROC	EXPORT

		DATA
		EXPORT	DialogPtr:DATA
		EXPORT	DialogPtr2:DATA
		ENTRY	(ItemType,ItemHandle,ItemBox):DATA
DialogPtr	DS.L	1
DialogPtr2	DS.L	1
ItemType	DS.L	1
ItemHandle	DS.L	1
ItemBox		DS.L	2

		CODE
		IMPORT	SetItem		:Code
		IMPORT	AboutWindow	:Code
;
		MOVE.L	D0,-(SP)
	
		CLR.L	-(SP)			; save space for result
		MOVE.W	#130,-(SP)		; Dialog ID
		CLR.L	-(SP)
		MOVE.L	#-1,-(SP)		; front window
		_GetNewDialog
		MOVE.L	(SP)+,DialogPtr		;Save ptr to dialog
		
		LEA	AboutWindow,A0		;Pass routine name
;		*** NOTE uncomment the following HINT statement for PowerPC version
;	  	HINT	UPP "AboutWindow" is "UserItemUPP"
		MOVEQ.L	#4,D0			;Pass the ID for the user's name
		JSR	SetItem			;Set the routine to draw the user name
		
		MOVE.L	(SP)+,D0
		RTS
		ENDP

;*********************************************************************
; GETITEM
;	Get information about the given item in the current dialog
;IN:	D0: Item number to get
;	DialogPtr: Pointer to the current dialog
;OUT:	ItemType:  Set to the type of the item
;	ItemHandle:Set to a handle to the item
;	ItemBox:   Set to the rectangle enclosing the item
;
	SEG	'Main'
;
GetItem:	PROC	Entry

		MOVEM.L	D0-D2/A0-A1,-(SP)
		MOVE.L	DialogPtr,-(SP)
		MOVE.W	D0,-(SP)		;Get a handle to the check box
		PEA	ItemType
		PEA	ItemHandle
		PEA	ItemBox
		_GetDItem			;Get the item information
		MOVEM.L	(SP)+,D0-D2/A0-A1
	
		RTS
		ENDP


;*********************************************************************
; SETITEM
;	Set the user item update proc
;
;IN:	D0: Item Number
;	A0: Proc Address
;	DialogPtr: Pointer to the current dialog
;	ItemType:  Type of the item
;OUT:	ItemBox:   Set to the rectangle enclosing the item
;
SetItem:	PROC	Entry
;
		MOVEM.L	D0-D2/A0-A1,-(SP)
	
		JSR	GetItem				;Get info on item
		MOVE.L	DialogPtr,-(SP)			;Pass dialog pointer
		MOVE.W	D0,-(SP)			;Item number
		MOVE.W	ItemType,-(SP)			;Leave the type the same
		MOVE.L	A0,-(SP)			;Procedure Address
		PEA	ItemBox
		_SetDItem
	
		MOVEM.L	(SP)+,D0-D2/A0-A1
		RTS
	
		ENDP

;*********************************************************************
; ABOUTWINDOW
;	Frame the polygon area of the about dialog window and
;	set the clip rectangle. Then call DoAboutPolygons to
;	draw the polygons.
;
;IN:	SplashWindow: Pointer to about window
;	SplashItem  : User Item in about window

AboutWindow:	PROC	EXPORT
;
StackFrame	RECORD	{A6Link},DECR
SplashWindow	DS.L	1
SplashItem	DS.W	1
RetAddr 	DS.L	1			; return address
A6Link		DS.L	1			; place holder for A6 link
OldWindowSize	DS.L	1
OldClipRect	DS.L	1
LocalSize	EQU 	*			; size of local variables
		ENDR
;
		IMPORT	G:APPGLOBALS
		IMPORT	DoAboutPolygons	:Code
	
		WITH	StackFrame
		LINK	A6,#LocalSize			; allocate our local stack frame
		MOVEM.L	D0-D5/A1,-(SP)
	
		MOVE.W	SplashItem(A6),D0		;Pass the item number
		MOVE.L	SplashWindow(A6),A0		;Pass the window pointer
		BSR	GetItem				;get the rect into ItemBox
	
		PEA	ItemBox				; Frame and set the Clip rectangle
		_FrameRect				; For drawing polygons
		PEA	ItemBox
		_ClipRect
	
		MOVE.L	ItemBox+4,D0
		MOVE.L	ItemBox,D1
		SUB	D0,D1
		MOVE.L	G.WindowSize,OldWindowSize(A6)
		MOVE.L	D0,G.WindowSize
		BSR	DoAboutPolygons
	
		MOVE.L	DialogPtr,-(SP)			; resource for dialog
		CLR.L	-(SP)
		_SetGWorld
		MOVE.L	OldWindowSize(A6),G.WindowSize	; Reset the clip rectangle
		CLR.L	OldClipRect(A6)
		PEA	OldClipRect(a6)
		_ClipRect
	
		MOVEM.L	(SP)+,D0-D5/A1			; tidy up for return
		UNLK	A6				; destroy the link
		MOVE.L	(SP),A0
		LEA	10(SP),SP
		JMP	(A0)
		
		EndWith
	
		ENDP
		
		END
