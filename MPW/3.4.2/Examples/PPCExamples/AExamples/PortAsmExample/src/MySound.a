;------------------------------------------------------------------------------
;
;	PortAsm Simple Example
;
;	Copyright MicroAPL Ltd 1993/4
;
;	File MySound.a - Routines to handle the loading of the 'snd ' resource,
;			 and play the sound.
;
;  2/12/93 STE	Initial Version
;	
;------------------------------------------------------------------------------

		CASE	OBJECT
	
		INCLUDE	'Traps.a'
		INCLUDE	'Sound.a'

SoundRez	EQU	-1		; for our `snd' resource

;************************************************************
; SOUNDINIT
; Load the 'snd' and 'CODE' resources we require and install
; the sound as a voice for the synth channel
; 
		SEG	'Initialize'
SoundInit	PROC	Export
		
		DATA
		ENTRY	(SoundChannel):DATA
SoundHandle	DS.L	2		
SoundChannel	DS.L	1
		
		CODE
		WITH	SndChannel
		
		; Get the sound resource and save a handle to it
		;
		CLR.L	-(SP)			; create space for result
		MOVE.L	#'snd ',-(SP)
		MOVE.W	#SoundRez,-(SP)		; get the sound resource
		_GetResource
		MOVE.L	(SP),SoundHandle	; save handle
		_LoadResource			; load it into memory
		
		; We allow _SndNewChannel to allocate space for our channel on
		; the heap rather than doing it ourselves... This is the way
		; _SndPlay does it. We define our own channel to allow us to
		; play sound asynchronously
		;
		CLR.L	-(SP)			; Space for Result
		PEA	SoundChannel
		MOVE.W	#sampledSynth,-(SP)
		MOVE.L	#initMono,-(SP)
		CLR.L	-(SP)			; no user callback routine
		_SndNewChannel			; open the channel
		LEA	4(SP),SP		; remove result
		
		; install the snd resource as a voice for the channel
		;
		MOVE.L	SoundHandle,A0
		MOVE.L	(A0),A1
		LEA	$0C(A1),A0
		MOVE.W	#soundCmd,SndCommand.cmd(A0)
		MOVE.W	#0,SndCommand.param1(A0)
		LEA	$14(A1),A1		; point to the buffer
		MOVE.L	A1,SndCommand.param2(A0)
		CLR.L	-(SP)			; create space for result
		MOVE.L	SoundChannel,-(SP)
		MOVE.L	A0,-(SP)
		_SndDoImmediate
		LEA	4(SP),SP		; ignore result

		RTS

		ENDP


;************************************************************
; SOUNDPLAY
; Play the sound resource
;
;IN:	D0.L: Playback frequency, range 20-60
; 

		SEG	'Main'
SoundPlay	PROC	Export			; any source file can use this routine
		DATA
mycommand	DS	SndCommand

		CODE
		WITH	SndCommand
		MOVE.L	SoundChannel,A0

		LEA	mycommand,A1
		MOVE.W	#freqDurationCmd,cmd(A1)
		MOVE.W	#100,param1(A1)		; set duration in half-milliseconds
		MOVE.L	D0,param2(A1)		; set playback frequency

		CLR.L	-(SP)			; create space for result
		MOVE.L	A0,-(SP)
		MOVE.L	A1,-(SP)
		_SndDoImmediate
		LEA	4(SP),SP		; ignore result

		RTS

		ENDP

		END
