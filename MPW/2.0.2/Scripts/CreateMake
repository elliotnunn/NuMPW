#	CreateMake - create a program makefile
#
#	Usage:
#		CreateMake [ -Application | -Tool | -DA ] program file…
#
#	Script CreateMake creates a simple MakeFile for building the specified
#	program.  The program parameter is the name of the program.  Makefile
#	<program>.make is created.  The default program type is Application.
#	The program may be written in any combination of Assembly Language, C,
#	Pascal, and/or Rez.	The list of files may include both source in
#	these languages and library object files that don't appear below.
#
#	CreateMake links the program with the following set of MPW Libraries:
#
#		Inside Macintosh Interfaces
#			{Libraries}Interface.o	
#	
#		Runtime support - one of the following:
#			{Libraries}Runtime.o 		# no C object files
#			{CLibraries}CRuntime.o		# any C object files
#
#		C Libraries - if any source is in C
#			{CLibraries}StdCLib.o
#			{CLibraries}CSANELib.o
#			{CLibraries}Math.o
#			{CLibraries}CInterface.o
#
#		Pascal Libraries - if any source is in Pascal
#			{PLibraries}PasLib.o
#			{PLibraries}SANELib.o
#
#		For tools:
#			{Libraries}ToolLibs.o
#
#		For desk accessories:
#			{Libraries}DRVRRuntime.o
#
#
#	Copyright Apple Computer, Inc. 1987
#	All rights reserved.

Set Exit 0
Set CaseSensitive 0
Set type Application
Set options "-w -t 'APPL' -c '????'"
Set runtime '{Libraries}Runtime.o'
Set interface '{Libraries}Interface.o'
Unset sources clibs plibs toollibs DRVRRuntime resource objects program suffix

#	Collect the script parameters.

For i in {"Parameters"}
	If "{i}" =~ /-Application/
	Else If "{i}" =~ /-Tool/
		Set type Tool
		Set options '-w -t "MPST" -c "MPS "'
		Set toollibs '{Libraries}ToolLibs.o'
	Else If "{i}" =~ /-DA/
		Set type DA
	Else If "{i}" =~ /≈.[acpr]/
		Set sources "{sources}'{i}' "
	Else If "{i}" =~ /≈.[o]/
		Set objects "{objects}'{i}' "
	Else If "{program}" == ""
		Set program "{i}"
	Else If "{i}" =~ /-≈/
		Echo "### {0} - ∂"{i}∂" is not an option." > Dev:StdErr
		Echo "# Usage - {0} [ -Application | -Tool | -DA ] program file…" > Dev:StdErr
		Exit 1
	Else
		Echo "### {0} - Files must end in .a, .c, .p, .r, or .o." > Dev:StdErr
		Echo "# Usage - {0} [ -Application | -Tool | -DA ] program file…" > Dev:StdErr
		Exit 1
	End
End
If "{program}" == ""
	Echo "### {0} - A program name is required." > Dev:StdErr
	Echo "### {0} - Don't include the .a, .c, or .p suffix." > Dev:StdErr
	Echo "# Usage - {0} [ -Application | -Tool | -DA ] program file…" > Dev:StdErr
	Exit 1
End
If "{sources}" == ""
	Echo "### {0} - A source file is required." > Dev:StdErr
	Echo "# Usage - {0} [ -Application | -Tool | -DA ] program file…" > Dev:StdErr
	Exit 1
End

#	Create the heading at the top of the makefile.

Begin
	Echo -n '#   File:       '; Quote "{program}".make
	Echo -n '#   Target:     '; Quote "{program}"
	If "{sources}" =~ /≈«1,80»/
		Echo -n '#   Sources:    '; Quote  {sources}
	Else
		Set heading '#   Sources:    '
		For i In {sources}
			Echo -n "{heading}"
			Quote "{i}"
			Set heading '#               '
		End
	End
	Echo -n '#   Created:    '; Date
	Echo

#	Generate Asm, C, Pascal, and Rez rules.

	For file in {sources}
		If "{file}" =~ /≈.a/
			Quote "{file}".o ƒ "{program}".make "{file}"
			Echo -n ∂t; Quote Asm "{file}"
			Set objects "{objects}'{file}.o' "
		Else If "{file}" =~ /≈.c/
			Quote "{file}".o ƒ "{program}".make "{file}"
			Echo -n ∂t; Quote C "{file}"
			Set objects "{objects}'{file}.o' "
			Set runtime '{CLibraries}CRuntime.o'
			Set clibs '{CLibraries}StdCLib.o {CLibraries}CSANELib.o ∂
				{CLibraries}Math.o {CLibraries}CInterface.o'
		Else If "{file}" =~ /≈.p/
			Quote "{file}".o ƒ "{program}".make "{file}"
			Echo -n ∂t; Quote Pascal "{file}"
			Set objects "{objects}'{file}.o' "
			Set plibs '{PLibraries}PasLib.o {PLibraries}SANELib.o'
		Else If "{file}" =~ /(≈)®1.r/
			Set resource "{file}"
			If {type} == DA
				Quote "{program}" ƒ "{program}".make "{program}".DRVW "{file}"
				Echo -n ∂t; Quote Rez -rd "{file}" -o "{program}"
				Set DRVRruntime '{Libraries}DRVRRuntime.o'
			Else
				Quote "{program}" ƒƒ "{program}".make "{file}"
				Echo -n ∂t; Quote Rez "{file}" -append -o "{program}"
			End
		End
	End

#	Generate Link rule.

	If {type} == DA AND "{resource}" == ""
		Quote -n "{program}" ƒ "{program}".make
		Set options '-w -da -t DFIL -c DMOV -rt DRVR=12 -sg "'"{program}"'"'
	Else If {type} == DA
		Quote -n "{program}".DRVW ƒ "{program}".make
		Set options '-w -t DFIL -c DMOV -rt DRVW=0 -sg "'"{program}"'"'
		Set suffix '.DRVW'
	Else
		Quote -n "{program}" ƒƒ "{program}".make
	End

	If "{objects}" =~ /≈«1,80»/
		Echo -n " "; Quote {objects}
	Else
		For i In {objects}
			Echo ' ∂'
			Echo -n ∂t∂t; Quote -n "{i}"
		End
		Echo
	End

	Echo -n ∂t; Quote -n Link {options}; Echo ' ∂'
	For i In {DRVRRuntime} {objects} {interface} {runtime} {clibs} {plibs} {toollibs}
		If "{i}" =~ /(≈)®1(∂{≈∂})®2(≈)®3/	# contains {}s ?
			Echo -n ∂t∂t; Echo "{®1}∂"{®2}∂"{®3}" ∂∂
		Else
			Echo -n ∂t∂t; Quote -n "{i}"; Echo ' ∂'
		End
	End
	Echo -n ∂t∂t; Quote -o "{program}{suffix}"
End > "{program}".make
Echo "{program}"
