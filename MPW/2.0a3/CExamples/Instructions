Instructions	-  Instructions for C Examples

Copyright Apple Computer, Inc. 1986-87
All rights reserved.



Instructions for C Examples


   Note: For more information about building the sample programs, see
   Chapter 1 of the MPW Reference manual.

   The files used to create all of the following example programs are in
   the folder "CExamples".	Depending on the configuration of your machine,
   you must select and execute one of the following commands to change the
   directory to the correct folder.

	  Directory "{MPW}CExamples"	# for HD-20 configurations
	  Directory "C:CExamples"		# for 800K disks

   (To execute the command select it and press Enter.)



Sample - The Inside Macintosh Sample Application


   The Sample application is discussed in Inside Macintosh, Volume I.
   The instructions below compile, create the resources, and link
   Sample.	Select and enter the commands to execute them.

	  C Sample.c
	  Rez Sample.r -o Sample
	  Link Sample.c.o  ∂
		 "{CLibraries}"CRuntime.o ∂
		 "{CLibraries}"CInterface.o ∂
		 -o Sample


   To execute Sample, simply select and enter its name.

	 Sample


   Make can be used to rebuild Sample after modifying Sample.c or Sample.r.
   The file MakeFile contains the commands for creating the C version 
   of Sample, as well as the other C examples. Execute the Make command 
   below to see these commands, then execute the commands themselves.

	  Make -f MakeFile Sample

	
   Note that if Sample.c and Sample.r haven't been modified since Sample
   was built, Make won't generate any commands, since Sample is up-to-date.



Count - A Sample MPW Tool


	Count is a tool that runs in the MPW environment.  A version of Count
	is included with MPW, and is documented in Chapter 9 of the MPW
	Reference manual. The file MakeFile contains the commands for creating
	the C version of Count. Execute the following Make command to see these 
	commands, then execute the commands themselves.

	  Make -f MakeFile Count


   To test Count, try counting the characters in file Count.c.

	  Count -c Count.c



Memory - A Sample Desk Accessory


   Memory is a sample desk accessory written in C.	To build this desk
   accessory, execute the following Make command and then execute its output.

	  Make -f MakeFile  Memory


   The build process puts the desk accessory into a Font/DA Mover file.
   To install the Memory desk accessory, use the Font/DA Mover to copy
   resource Memory from the file Memory into the System file.  If the
   Font/DA Mover is in your Applications folder, the following command
   will run it from MPW.

	 "Font/DA Mover" "{SystemFolder}"System Memory


   After quitting the Font/DA Mover and returning to the MPW Shell, select
   "Memory" from the Apple menu.  It displays the available memory in the
   application and system heaps, and on the boot disk.



TestPerf - An example of using the performance tools from Pascal.

	"TestPerf" is a small MPW tool that demonstrates the use of the 
	performance analysis tools.  MakeFile contains the commands for
	building "TestPerf".  Execute the following Make command to generate
	these commands, then execute the commands themselves.
	
		Make -f MakeFile TestPerf

	To execute TestPerf, select and execute the following command.  This
	test will run about 30 seconds (on a Becks) with only internal
	computations being performed:
	
		TestPerf

	The output of TestPerf is in the file "Perform.out".  To examine this
	output, execute the following command:
	
		Open Perform.out
		
	In this sample use of the performance measurement tools, the ROM was
	measured.  So the ROM link map file needs to be combined with the program
	link map file:
	
		Catenate "{MPW}ROM Maps:"MacPlusROM.map ∂
			TestPerf.map	# the linkmap file ∂
			> temp

	"PerformReport"	is an MPW Tool that combines the output of the performance
	tools with the link map file and produces a list of procedures, sorted by
	estimated percent of time spent in each procedure.  To run "PerformReport"
	execute the following command:

		PerformReport > Report.Out ∂
		-l temp ∂
		-m Perform.Out	# the performance tools output file

	The output of PerformReport is in the file "Report.Out".  To examine this
	output, execute the following command:
	
		Open Report.Out

